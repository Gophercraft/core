// generated by protoc-gen-gcraft : DO NOT EDIT
package bnet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protocol "github.com/Gophercraft/core/bnet/bgs/protocol"
	v1 "github.com/Gophercraft/core/bnet/bgs/protocol/authentication/v1"
	math "math"
)

// shut the compiler up
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = protocol.E_MethodOptions

const AuthenticationListenerHash = 0x71240E35

type AuthenticationListener interface {
	OnModuleLoad(*Conn, uint32, *v1.ModuleLoadRequest)
	OnModuleMessage(*Conn, uint32, *v1.ModuleMessageRequest)
	OnServerStateChange(*Conn, uint32, *v1.ServerStateChangeRequest)
	OnLogonComplete(*Conn, uint32, *v1.LogonResult)
	OnMemModuleLoad(*Conn, uint32, *v1.MemModuleLoadRequest)
	OnLogonUpdate(*Conn, uint32, *v1.LogonUpdateRequest)
	OnVersionInfoUpdated(*Conn, uint32, *v1.VersionInfoNotification)
	OnLogonQueueUpdate(*Conn, uint32, *v1.LogonQueueUpdateRequest)
	OnLogonQueueEnd(*Conn, uint32, *protocol.NoData)
	OnGameAccountSelected(*Conn, uint32, *v1.GameAccountSelectedRequest)
}

func DispatchAuthenticationListener(conn *Conn, svc AuthenticationListener, token uint32, method uint32, data []byte) error {
	switch method {
	case 1:
		var args v1.ModuleLoadRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnModuleLoad(conn, token, &args)
	case 2:
		var args v1.ModuleMessageRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnModuleMessage(conn, token, &args)
	case 4:
		var args v1.ServerStateChangeRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnServerStateChange(conn, token, &args)
	case 5:
		var args v1.LogonResult
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnLogonComplete(conn, token, &args)
	case 6:
		var args v1.MemModuleLoadRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnMemModuleLoad(conn, token, &args)
	case 10:
		var args v1.LogonUpdateRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnLogonUpdate(conn, token, &args)
	case 11:
		var args v1.VersionInfoNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnVersionInfoUpdated(conn, token, &args)
	case 12:
		var args v1.LogonQueueUpdateRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnLogonQueueUpdate(conn, token, &args)
	case 13:
		var args protocol.NoData
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnLogonQueueEnd(conn, token, &args)
	case 14:
		var args v1.GameAccountSelectedRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnGameAccountSelected(conn, token, &args)
	}
	return nil
}

type EmptyAuthenticationListener struct{}

func (e EmptyAuthenticationListener) OnModuleLoad(conn *Conn, token uint32, args *v1.ModuleLoadRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnModuleMessage(conn *Conn, token uint32, args *v1.ModuleMessageRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnServerStateChange(conn *Conn, token uint32, args *v1.ServerStateChangeRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnLogonComplete(conn *Conn, token uint32, args *v1.LogonResult) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnMemModuleLoad(conn *Conn, token uint32, args *v1.MemModuleLoadRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnLogonUpdate(conn *Conn, token uint32, args *v1.LogonUpdateRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnVersionInfoUpdated(conn *Conn, token uint32, args *v1.VersionInfoNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnLogonQueueUpdate(conn *Conn, token uint32, args *v1.LogonQueueUpdateRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnLogonQueueEnd(conn *Conn, token uint32, args *protocol.NoData) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationListener) OnGameAccountSelected(conn *Conn, token uint32, args *v1.GameAccountSelectedRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}

func (c *Conn) AuthenticationListener_Request_OnModuleLoad(args *v1.ModuleLoadRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 1, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnModuleMessage(args *v1.ModuleMessageRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 2, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnServerStateChange(args *v1.ServerStateChangeRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 4, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnLogonComplete(args *v1.LogonResult) error {
	header, _, err := c.Request(AuthenticationListenerHash, 5, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnMemModuleLoad(args *v1.MemModuleLoadRequest) (*v1.MemModuleLoadResponse, error) {
	header, bytes, err := c.Request(AuthenticationListenerHash, 6, args)
	if err != nil {
		return nil, err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return nil, fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	var out v1.MemModuleLoadResponse
	err = proto.Unmarshal(bytes, &out)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *Conn) AuthenticationListener_Request_OnLogonUpdate(args *v1.LogonUpdateRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 10, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnVersionInfoUpdated(args *v1.VersionInfoNotification) error {
	header, _, err := c.Request(AuthenticationListenerHash, 11, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnLogonQueueUpdate(args *v1.LogonQueueUpdateRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 12, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnLogonQueueEnd() error {
	header, _, err := c.Request(AuthenticationListenerHash, 13, nil)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationListener_Request_OnGameAccountSelected(args *v1.GameAccountSelectedRequest) error {
	header, _, err := c.Request(AuthenticationListenerHash, 14, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}
