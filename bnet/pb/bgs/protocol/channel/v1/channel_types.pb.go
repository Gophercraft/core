// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bgs/low/pb/client/channel_types.proto

package v1

import (
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	v1 "github.com/Gophercraft/core/bnet/pb/bgs/protocol/account/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChannelState_PrivacyLevel int32

const (
	ChannelState_PRIVACY_LEVEL_OPEN                       ChannelState_PrivacyLevel = 1
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND ChannelState_PrivacyLevel = 2
	ChannelState_PRIVACY_LEVEL_OPEN_INVITATION            ChannelState_PrivacyLevel = 3
	ChannelState_PRIVACY_LEVEL_CLOSED                     ChannelState_PrivacyLevel = 4
)

// Enum value maps for ChannelState_PrivacyLevel.
var (
	ChannelState_PrivacyLevel_name = map[int32]string{
		1: "PRIVACY_LEVEL_OPEN",
		2: "PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND",
		3: "PRIVACY_LEVEL_OPEN_INVITATION",
		4: "PRIVACY_LEVEL_CLOSED",
	}
	ChannelState_PrivacyLevel_value = map[string]int32{
		"PRIVACY_LEVEL_OPEN":                       1,
		"PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND": 2,
		"PRIVACY_LEVEL_OPEN_INVITATION":            3,
		"PRIVACY_LEVEL_CLOSED":                     4,
	}
)

func (x ChannelState_PrivacyLevel) Enum() *ChannelState_PrivacyLevel {
	p := new(ChannelState_PrivacyLevel)
	*p = x
	return p
}

func (x ChannelState_PrivacyLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelState_PrivacyLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_bgs_low_pb_client_channel_types_proto_enumTypes[0].Descriptor()
}

func (ChannelState_PrivacyLevel) Type() protoreflect.EnumType {
	return &file_bgs_low_pb_client_channel_types_proto_enumTypes[0]
}

func (x ChannelState_PrivacyLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChannelState_PrivacyLevel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChannelState_PrivacyLevel(num)
	return nil
}

// Deprecated: Use ChannelState_PrivacyLevel.Descriptor instead.
func (ChannelState_PrivacyLevel) EnumDescriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{4, 0}
}

type Message struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Attribute []*protocol.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetAttribute() []*protocol.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type ListChannelsOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex      *uint32                   `protobuf:"varint,1,opt,name=start_index,json=startIndex,def=0" json:"start_index,omitempty"`
	MaxResults      *uint32                   `protobuf:"varint,2,opt,name=max_results,json=maxResults,def=16" json:"max_results,omitempty"`
	Name            *string                   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Program         *uint32                   `protobuf:"fixed32,4,opt,name=program" json:"program,omitempty"`
	Locale          *uint32                   `protobuf:"fixed32,5,opt,name=locale" json:"locale,omitempty"`
	CapacityFull    *uint32                   `protobuf:"varint,6,opt,name=capacity_full,json=capacityFull" json:"capacity_full,omitempty"`
	AttributeFilter *protocol.AttributeFilter `protobuf:"bytes,7,req,name=attribute_filter,json=attributeFilter" json:"attribute_filter,omitempty"`
	ChannelType     *string                   `protobuf:"bytes,8,opt,name=channel_type,json=channelType" json:"channel_type,omitempty"`
}

// Default values for ListChannelsOptions fields.
const (
	Default_ListChannelsOptions_StartIndex = uint32(0)
	Default_ListChannelsOptions_MaxResults = uint32(16)
)

func (x *ListChannelsOptions) Reset() {
	*x = ListChannelsOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelsOptions) ProtoMessage() {}

func (x *ListChannelsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelsOptions.ProtoReflect.Descriptor instead.
func (*ListChannelsOptions) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{1}
}

func (x *ListChannelsOptions) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return Default_ListChannelsOptions_StartIndex
}

func (x *ListChannelsOptions) GetMaxResults() uint32 {
	if x != nil && x.MaxResults != nil {
		return *x.MaxResults
	}
	return Default_ListChannelsOptions_MaxResults
}

func (x *ListChannelsOptions) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ListChannelsOptions) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *ListChannelsOptions) GetLocale() uint32 {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return 0
}

func (x *ListChannelsOptions) GetCapacityFull() uint32 {
	if x != nil && x.CapacityFull != nil {
		return *x.CapacityFull
	}
	return 0
}

func (x *ListChannelsOptions) GetAttributeFilter() *protocol.AttributeFilter {
	if x != nil {
		return x.AttributeFilter
	}
	return nil
}

func (x *ListChannelsOptions) GetChannelType() string {
	if x != nil && x.ChannelType != nil {
		return *x.ChannelType
	}
	return ""
}

type ChannelDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId      *protocol.EntityId `protobuf:"bytes,1,req,name=channel_id,json=channelId" json:"channel_id,omitempty"`
	CurrentMembers *uint32            `protobuf:"varint,2,opt,name=current_members,json=currentMembers" json:"current_members,omitempty"`
	State          *ChannelState      `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (x *ChannelDescription) Reset() {
	*x = ChannelDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDescription) ProtoMessage() {}

func (x *ChannelDescription) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDescription.ProtoReflect.Descriptor instead.
func (*ChannelDescription) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{2}
}

func (x *ChannelDescription) GetChannelId() *protocol.EntityId {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelDescription) GetCurrentMembers() uint32 {
	if x != nil && x.CurrentMembers != nil {
		return *x.CurrentMembers
	}
	return 0
}

func (x *ChannelDescription) GetState() *ChannelState {
	if x != nil {
		return x.State
	}
	return nil
}

type ChannelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ChannelDescription `protobuf:"bytes,1,req,name=description" json:"description,omitempty"`
	Member      []*Member           `protobuf:"bytes,2,rep,name=member" json:"member,omitempty"`
}

func (x *ChannelInfo) Reset() {
	*x = ChannelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfo) ProtoMessage() {}

func (x *ChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfo.ProtoReflect.Descriptor instead.
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{3}
}

func (x *ChannelInfo) GetDescription() *ChannelDescription {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ChannelInfo) GetMember() []*Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type ChannelState struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	MaxMembers          *uint32                    `protobuf:"varint,1,opt,name=max_members,json=maxMembers" json:"max_members,omitempty"`
	MinMembers          *uint32                    `protobuf:"varint,2,opt,name=min_members,json=minMembers" json:"min_members,omitempty"`
	Attribute           []*protocol.Attribute      `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
	Invitation          []*protocol.Invitation     `protobuf:"bytes,4,rep,name=invitation" json:"invitation,omitempty"`
	Reason              *uint32                    `protobuf:"varint,6,opt,name=reason" json:"reason,omitempty"`
	PrivacyLevel        *ChannelState_PrivacyLevel `protobuf:"varint,7,opt,name=privacy_level,json=privacyLevel,enum=bgs.protocol.channel.v1.ChannelState_PrivacyLevel,def=1" json:"privacy_level,omitempty"`
	Name                *string                    `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
	ChannelType         *string                    `protobuf:"bytes,10,opt,name=channel_type,json=channelType,def=default" json:"channel_type,omitempty"`
	Program             *uint32                    `protobuf:"fixed32,11,opt,name=program" json:"program,omitempty"`
	SubscribeToPresence *bool                      `protobuf:"varint,13,opt,name=subscribe_to_presence,json=subscribeToPresence,def=1" json:"subscribe_to_presence,omitempty"`
}

// Default values for ChannelState fields.
const (
	Default_ChannelState_PrivacyLevel        = ChannelState_PRIVACY_LEVEL_OPEN
	Default_ChannelState_ChannelType         = string("default")
	Default_ChannelState_SubscribeToPresence = bool(true)
)

func (x *ChannelState) Reset() {
	*x = ChannelState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelState) ProtoMessage() {}

func (x *ChannelState) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelState.ProtoReflect.Descriptor instead.
func (*ChannelState) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{4}
}

func (x *ChannelState) GetMaxMembers() uint32 {
	if x != nil && x.MaxMembers != nil {
		return *x.MaxMembers
	}
	return 0
}

func (x *ChannelState) GetMinMembers() uint32 {
	if x != nil && x.MinMembers != nil {
		return *x.MinMembers
	}
	return 0
}

func (x *ChannelState) GetAttribute() []*protocol.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *ChannelState) GetInvitation() []*protocol.Invitation {
	if x != nil {
		return x.Invitation
	}
	return nil
}

func (x *ChannelState) GetReason() uint32 {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return 0
}

func (x *ChannelState) GetPrivacyLevel() ChannelState_PrivacyLevel {
	if x != nil && x.PrivacyLevel != nil {
		return *x.PrivacyLevel
	}
	return Default_ChannelState_PrivacyLevel
}

func (x *ChannelState) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ChannelState) GetChannelType() string {
	if x != nil && x.ChannelType != nil {
		return *x.ChannelType
	}
	return Default_ChannelState_ChannelType
}

func (x *ChannelState) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

func (x *ChannelState) GetSubscribeToPresence() bool {
	if x != nil && x.SubscribeToPresence != nil {
		return *x.SubscribeToPresence
	}
	return Default_ChannelState_SubscribeToPresence
}

type MemberAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattleTag *string `protobuf:"bytes,3,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
}

func (x *MemberAccountInfo) Reset() {
	*x = MemberAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAccountInfo) ProtoMessage() {}

func (x *MemberAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAccountInfo.ProtoReflect.Descriptor instead.
func (*MemberAccountInfo) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{5}
}

func (x *MemberAccountInfo) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

type MemberState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute  []*protocol.Attribute `protobuf:"bytes,1,rep,name=attribute" json:"attribute,omitempty"`
	Role       []uint32              `protobuf:"varint,2,rep,name=role" json:"role,omitempty"`
	Privileges *uint64               `protobuf:"varint,3,opt,name=privileges,def=0" json:"privileges,omitempty"`
	Info       *MemberAccountInfo    `protobuf:"bytes,4,opt,name=info" json:"info,omitempty"`
}

// Default values for MemberState fields.
const (
	Default_MemberState_Privileges = uint64(0)
)

func (x *MemberState) Reset() {
	*x = MemberState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberState) ProtoMessage() {}

func (x *MemberState) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberState.ProtoReflect.Descriptor instead.
func (*MemberState) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{6}
}

func (x *MemberState) GetAttribute() []*protocol.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *MemberState) GetRole() []uint32 {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *MemberState) GetPrivileges() uint64 {
	if x != nil && x.Privileges != nil {
		return *x.Privileges
	}
	return Default_MemberState_Privileges
}

func (x *MemberState) GetInfo() *MemberAccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *protocol.Identity `protobuf:"bytes,1,req,name=identity" json:"identity,omitempty"`
	State    *MemberState       `protobuf:"bytes,2,req,name=state" json:"state,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{7}
}

func (x *Member) GetIdentity() *protocol.Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *Member) GetState() *MemberState {
	if x != nil {
		return x.State
	}
	return nil
}

type SubscriberId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in bgs/low/pb/client/channel_types.proto.
	Account     *v1.AccountId         `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	GameAccount *v1.GameAccountHandle `protobuf:"bytes,2,opt,name=game_account,json=gameAccount" json:"game_account,omitempty"`
	Process     *protocol.ProcessId   `protobuf:"bytes,3,opt,name=process" json:"process,omitempty"`
}

func (x *SubscriberId) Reset() {
	*x = SubscriberId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberId) ProtoMessage() {}

func (x *SubscriberId) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_channel_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberId.ProtoReflect.Descriptor instead.
func (*SubscriberId) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_channel_types_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Marked as deprecated in bgs/low/pb/client/channel_types.proto.
func (x *SubscriberId) GetAccount() *v1.AccountId {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscriberId) GetGameAccount() *v1.GameAccountHandle {
	if x != nil {
		return x.GameAccount
	}
	return nil
}

func (x *SubscriberId) GetProcess() *protocol.ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

var File_bgs_low_pb_client_channel_types_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_channel_types_proto_rawDesc = []byte{
	0x0a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x1a, 0x30, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x27, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x62, 0x67, 0x73,
	0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f,
	0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x35, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x2a, 0x05, 0x08, 0x64, 0x10, 0x91, 0x4e, 0x22, 0xb6,
	0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x02, 0x31, 0x36, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x10, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3b,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0xf5, 0x04, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x6b, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x3a, 0x12, 0x50, 0x52, 0x49, 0x56,
	0x41, 0x43, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x13, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x91, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x4c, 0x45, 0x56,
	0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x52, 0x49,
	0x56, 0x41, 0x43, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f,
	0x49, 0x4e, 0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x46,
	0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x50, 0x52, 0x49, 0x56, 0x41,
	0x43, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52,
	0x49, 0x56, 0x41, 0x43, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x04, 0x2a, 0x05, 0x08, 0x64, 0x10, 0x91, 0x4e, 0x22, 0x32, 0x0a, 0x11, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x22,
	0xbb, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x3a, 0x01,
	0x30, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x78, 0x0a,
	0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x0b, 0x67, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42, 0x3d, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x70, 0x68, 0x65,
	0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62, 0x6e, 0x65, 0x74,
	0x2f, 0x70, 0x62, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x50, 0x00,
}

var (
	file_bgs_low_pb_client_channel_types_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_channel_types_proto_rawDescData = file_bgs_low_pb_client_channel_types_proto_rawDesc
)

func file_bgs_low_pb_client_channel_types_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_channel_types_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_channel_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_channel_types_proto_rawDescData)
	})
	return file_bgs_low_pb_client_channel_types_proto_rawDescData
}

var file_bgs_low_pb_client_channel_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bgs_low_pb_client_channel_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bgs_low_pb_client_channel_types_proto_goTypes = []interface{}{
	(ChannelState_PrivacyLevel)(0),   // 0: bgs.protocol.channel.v1.ChannelState.PrivacyLevel
	(*Message)(nil),                  // 1: bgs.protocol.channel.v1.Message
	(*ListChannelsOptions)(nil),      // 2: bgs.protocol.channel.v1.ListChannelsOptions
	(*ChannelDescription)(nil),       // 3: bgs.protocol.channel.v1.ChannelDescription
	(*ChannelInfo)(nil),              // 4: bgs.protocol.channel.v1.ChannelInfo
	(*ChannelState)(nil),             // 5: bgs.protocol.channel.v1.ChannelState
	(*MemberAccountInfo)(nil),        // 6: bgs.protocol.channel.v1.MemberAccountInfo
	(*MemberState)(nil),              // 7: bgs.protocol.channel.v1.MemberState
	(*Member)(nil),                   // 8: bgs.protocol.channel.v1.Member
	(*SubscriberId)(nil),             // 9: bgs.protocol.channel.v1.SubscriberId
	(*protocol.Attribute)(nil),       // 10: bgs.protocol.Attribute
	(*protocol.AttributeFilter)(nil), // 11: bgs.protocol.AttributeFilter
	(*protocol.EntityId)(nil),        // 12: bgs.protocol.EntityId
	(*protocol.Invitation)(nil),      // 13: bgs.protocol.Invitation
	(*protocol.Identity)(nil),        // 14: bgs.protocol.Identity
	(*v1.AccountId)(nil),             // 15: bgs.protocol.account.v1.AccountId
	(*v1.GameAccountHandle)(nil),     // 16: bgs.protocol.account.v1.GameAccountHandle
	(*protocol.ProcessId)(nil),       // 17: bgs.protocol.ProcessId
}
var file_bgs_low_pb_client_channel_types_proto_depIdxs = []int32{
	10, // 0: bgs.protocol.channel.v1.Message.attribute:type_name -> bgs.protocol.Attribute
	11, // 1: bgs.protocol.channel.v1.ListChannelsOptions.attribute_filter:type_name -> bgs.protocol.AttributeFilter
	12, // 2: bgs.protocol.channel.v1.ChannelDescription.channel_id:type_name -> bgs.protocol.EntityId
	5,  // 3: bgs.protocol.channel.v1.ChannelDescription.state:type_name -> bgs.protocol.channel.v1.ChannelState
	3,  // 4: bgs.protocol.channel.v1.ChannelInfo.description:type_name -> bgs.protocol.channel.v1.ChannelDescription
	8,  // 5: bgs.protocol.channel.v1.ChannelInfo.member:type_name -> bgs.protocol.channel.v1.Member
	10, // 6: bgs.protocol.channel.v1.ChannelState.attribute:type_name -> bgs.protocol.Attribute
	13, // 7: bgs.protocol.channel.v1.ChannelState.invitation:type_name -> bgs.protocol.Invitation
	0,  // 8: bgs.protocol.channel.v1.ChannelState.privacy_level:type_name -> bgs.protocol.channel.v1.ChannelState.PrivacyLevel
	10, // 9: bgs.protocol.channel.v1.MemberState.attribute:type_name -> bgs.protocol.Attribute
	6,  // 10: bgs.protocol.channel.v1.MemberState.info:type_name -> bgs.protocol.channel.v1.MemberAccountInfo
	14, // 11: bgs.protocol.channel.v1.Member.identity:type_name -> bgs.protocol.Identity
	7,  // 12: bgs.protocol.channel.v1.Member.state:type_name -> bgs.protocol.channel.v1.MemberState
	15, // 13: bgs.protocol.channel.v1.SubscriberId.account:type_name -> bgs.protocol.account.v1.AccountId
	16, // 14: bgs.protocol.channel.v1.SubscriberId.game_account:type_name -> bgs.protocol.account.v1.GameAccountHandle
	17, // 15: bgs.protocol.channel.v1.SubscriberId.process:type_name -> bgs.protocol.ProcessId
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_channel_types_proto_init() }
func file_bgs_low_pb_client_channel_types_proto_init() {
	if File_bgs_low_pb_client_channel_types_proto != nil {
		return
	}
	file_bgs_low_pb_client_api_client_v1_channel_id_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_channel_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelsOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_channel_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_channel_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_channel_types_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_channel_types_proto_depIdxs,
		EnumInfos:         file_bgs_low_pb_client_channel_types_proto_enumTypes,
		MessageInfos:      file_bgs_low_pb_client_channel_types_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_channel_types_proto = out.File
	file_bgs_low_pb_client_channel_types_proto_rawDesc = nil
	file_bgs_low_pb_client_channel_types_proto_goTypes = nil
	file_bgs_low_pb_client_channel_types_proto_depIdxs = nil
}
