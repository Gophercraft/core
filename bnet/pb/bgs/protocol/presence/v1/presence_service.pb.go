// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bgs/low/pb/client/presence_service.proto

package v1

import (
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId *protocol.EntityId `protobuf:"bytes,2,req,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ObjectId *uint64            `protobuf:"varint,3,req,name=object_id,json=objectId" json:"object_id,omitempty"`
	Program  []uint32           `protobuf:"fixed32,4,rep,name=program" json:"program,omitempty"`
	Key      []*FieldKey        `protobuf:"bytes,6,rep,name=key" json:"key,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SubscribeRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *SubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

func (x *SubscribeRequest) GetProgram() []uint32 {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *SubscribeRequest) GetKey() []*FieldKey {
	if x != nil {
		return x.Key
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId *protocol.EntityId `protobuf:"bytes,2,req,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ObjectId *uint64            `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{1}
}

func (x *UnsubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *UnsubscribeRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *UnsubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId       *protocol.EntityId `protobuf:"bytes,1,req,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	FieldOperation []*FieldOperation  `protobuf:"bytes,2,rep,name=field_operation,json=fieldOperation" json:"field_operation,omitempty"`
	NoCreate       *bool              `protobuf:"varint,3,opt,name=no_create,json=noCreate" json:"no_create,omitempty"`
	AgentId        *protocol.EntityId `protobuf:"bytes,4,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *UpdateRequest) GetFieldOperation() []*FieldOperation {
	if x != nil {
		return x.FieldOperation
	}
	return nil
}

func (x *UpdateRequest) GetNoCreate() bool {
	if x != nil && x.NoCreate != nil {
		return *x.NoCreate
	}
	return false
}

func (x *UpdateRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *protocol.EntityId `protobuf:"bytes,1,req,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Key      []*FieldKey        `protobuf:"bytes,2,rep,name=key" json:"key,omitempty"`
	AgentId  *protocol.EntityId `protobuf:"bytes,3,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRequest) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *QueryRequest) GetKey() []*FieldKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *QueryRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field []*Field `protobuf:"bytes,2,rep,name=field" json:"field,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{4}
}

func (x *QueryResponse) GetField() []*Field {
	if x != nil {
		return x.Field
	}
	return nil
}

type BatchSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId   `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId []*protocol.EntityId `protobuf:"bytes,2,rep,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Program  []uint32             `protobuf:"fixed32,3,rep,name=program" json:"program,omitempty"`
	Key      []*FieldKey          `protobuf:"bytes,4,rep,name=key" json:"key,omitempty"`
	ObjectId *uint64              `protobuf:"varint,5,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *BatchSubscribeRequest) Reset() {
	*x = BatchSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubscribeRequest) ProtoMessage() {}

func (x *BatchSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubscribeRequest.ProtoReflect.Descriptor instead.
func (*BatchSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{5}
}

func (x *BatchSubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *BatchSubscribeRequest) GetEntityId() []*protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BatchSubscribeRequest) GetProgram() []uint32 {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *BatchSubscribeRequest) GetKey() []*FieldKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BatchSubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

type SubscribeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *protocol.EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	Result   *uint32            `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (x *SubscribeResult) Reset() {
	*x = SubscribeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResult) ProtoMessage() {}

func (x *SubscribeResult) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResult.ProtoReflect.Descriptor instead.
func (*SubscribeResult) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeResult) GetEntityId() *protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *SubscribeResult) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type BatchSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscribeFailed []*SubscribeResult `protobuf:"bytes,1,rep,name=subscribe_failed,json=subscribeFailed" json:"subscribe_failed,omitempty"`
}

func (x *BatchSubscribeResponse) Reset() {
	*x = BatchSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubscribeResponse) ProtoMessage() {}

func (x *BatchSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubscribeResponse.ProtoReflect.Descriptor instead.
func (*BatchSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{7}
}

func (x *BatchSubscribeResponse) GetSubscribeFailed() []*SubscribeResult {
	if x != nil {
		return x.SubscribeFailed
	}
	return nil
}

type BatchUnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId   `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	EntityId []*protocol.EntityId `protobuf:"bytes,2,rep,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	ObjectId *uint64              `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *BatchUnsubscribeRequest) Reset() {
	*x = BatchUnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUnsubscribeRequest) ProtoMessage() {}

func (x *BatchUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_presence_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*BatchUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_presence_service_proto_rawDescGZIP(), []int{8}
}

func (x *BatchUnsubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *BatchUnsubscribeRequest) GetEntityId() []*protocol.EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BatchUnsubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

var File_bgs_low_pb_client_presence_service_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_presence_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x62, 0x67, 0x73, 0x2f,
	0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x07,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x99, 0x01, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x51, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xec, 0x01, 0x0a,
	0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x07, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0f, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33,
	0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6e, 0x0a, 0x16, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x17,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x32, 0xa1, 0x05, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x55, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2a, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x01, 0x12, 0x59, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02,
	0x08, 0x02, 0x12, 0x4f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b,
	0x02, 0x08, 0x03, 0x12, 0x60, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82,
	0xf9, 0x2b, 0x02, 0x08, 0x04, 0x12, 0x7b, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x2f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02,
	0x08, 0x08, 0x12, 0x63, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x31, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x09, 0x1a, 0x47, 0x82, 0xf9, 0x2b, 0x3d, 0x0a, 0x26, 0x62,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2a, 0x13, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xf9, 0x2b, 0x02, 0x10, 0x01,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47,
	0x6f, 0x70, 0x68, 0x65, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x62, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_presence_service_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_presence_service_proto_rawDescData = file_bgs_low_pb_client_presence_service_proto_rawDesc
)

func file_bgs_low_pb_client_presence_service_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_presence_service_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_presence_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_presence_service_proto_rawDescData)
	})
	return file_bgs_low_pb_client_presence_service_proto_rawDescData
}

var file_bgs_low_pb_client_presence_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bgs_low_pb_client_presence_service_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),        // 0: bgs.protocol.presence.v1.SubscribeRequest
	(*UnsubscribeRequest)(nil),      // 1: bgs.protocol.presence.v1.UnsubscribeRequest
	(*UpdateRequest)(nil),           // 2: bgs.protocol.presence.v1.UpdateRequest
	(*QueryRequest)(nil),            // 3: bgs.protocol.presence.v1.QueryRequest
	(*QueryResponse)(nil),           // 4: bgs.protocol.presence.v1.QueryResponse
	(*BatchSubscribeRequest)(nil),   // 5: bgs.protocol.presence.v1.BatchSubscribeRequest
	(*SubscribeResult)(nil),         // 6: bgs.protocol.presence.v1.SubscribeResult
	(*BatchSubscribeResponse)(nil),  // 7: bgs.protocol.presence.v1.BatchSubscribeResponse
	(*BatchUnsubscribeRequest)(nil), // 8: bgs.protocol.presence.v1.BatchUnsubscribeRequest
	(*protocol.EntityId)(nil),       // 9: bgs.protocol.EntityId
	(*FieldKey)(nil),                // 10: bgs.protocol.presence.v1.FieldKey
	(*FieldOperation)(nil),          // 11: bgs.protocol.presence.v1.FieldOperation
	(*Field)(nil),                   // 12: bgs.protocol.presence.v1.Field
	(*protocol.NoData)(nil),         // 13: bgs.protocol.NoData
}
var file_bgs_low_pb_client_presence_service_proto_depIdxs = []int32{
	9,  // 0: bgs.protocol.presence.v1.SubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	9,  // 1: bgs.protocol.presence.v1.SubscribeRequest.entity_id:type_name -> bgs.protocol.EntityId
	10, // 2: bgs.protocol.presence.v1.SubscribeRequest.key:type_name -> bgs.protocol.presence.v1.FieldKey
	9,  // 3: bgs.protocol.presence.v1.UnsubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	9,  // 4: bgs.protocol.presence.v1.UnsubscribeRequest.entity_id:type_name -> bgs.protocol.EntityId
	9,  // 5: bgs.protocol.presence.v1.UpdateRequest.entity_id:type_name -> bgs.protocol.EntityId
	11, // 6: bgs.protocol.presence.v1.UpdateRequest.field_operation:type_name -> bgs.protocol.presence.v1.FieldOperation
	9,  // 7: bgs.protocol.presence.v1.UpdateRequest.agent_id:type_name -> bgs.protocol.EntityId
	9,  // 8: bgs.protocol.presence.v1.QueryRequest.entity_id:type_name -> bgs.protocol.EntityId
	10, // 9: bgs.protocol.presence.v1.QueryRequest.key:type_name -> bgs.protocol.presence.v1.FieldKey
	9,  // 10: bgs.protocol.presence.v1.QueryRequest.agent_id:type_name -> bgs.protocol.EntityId
	12, // 11: bgs.protocol.presence.v1.QueryResponse.field:type_name -> bgs.protocol.presence.v1.Field
	9,  // 12: bgs.protocol.presence.v1.BatchSubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	9,  // 13: bgs.protocol.presence.v1.BatchSubscribeRequest.entity_id:type_name -> bgs.protocol.EntityId
	10, // 14: bgs.protocol.presence.v1.BatchSubscribeRequest.key:type_name -> bgs.protocol.presence.v1.FieldKey
	9,  // 15: bgs.protocol.presence.v1.SubscribeResult.entity_id:type_name -> bgs.protocol.EntityId
	6,  // 16: bgs.protocol.presence.v1.BatchSubscribeResponse.subscribe_failed:type_name -> bgs.protocol.presence.v1.SubscribeResult
	9,  // 17: bgs.protocol.presence.v1.BatchUnsubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	9,  // 18: bgs.protocol.presence.v1.BatchUnsubscribeRequest.entity_id:type_name -> bgs.protocol.EntityId
	0,  // 19: bgs.protocol.presence.v1.PresenceService.Subscribe:input_type -> bgs.protocol.presence.v1.SubscribeRequest
	1,  // 20: bgs.protocol.presence.v1.PresenceService.Unsubscribe:input_type -> bgs.protocol.presence.v1.UnsubscribeRequest
	2,  // 21: bgs.protocol.presence.v1.PresenceService.Update:input_type -> bgs.protocol.presence.v1.UpdateRequest
	3,  // 22: bgs.protocol.presence.v1.PresenceService.Query:input_type -> bgs.protocol.presence.v1.QueryRequest
	5,  // 23: bgs.protocol.presence.v1.PresenceService.BatchSubscribe:input_type -> bgs.protocol.presence.v1.BatchSubscribeRequest
	8,  // 24: bgs.protocol.presence.v1.PresenceService.BatchUnsubscribe:input_type -> bgs.protocol.presence.v1.BatchUnsubscribeRequest
	13, // 25: bgs.protocol.presence.v1.PresenceService.Subscribe:output_type -> bgs.protocol.NoData
	13, // 26: bgs.protocol.presence.v1.PresenceService.Unsubscribe:output_type -> bgs.protocol.NoData
	13, // 27: bgs.protocol.presence.v1.PresenceService.Update:output_type -> bgs.protocol.NoData
	4,  // 28: bgs.protocol.presence.v1.PresenceService.Query:output_type -> bgs.protocol.presence.v1.QueryResponse
	7,  // 29: bgs.protocol.presence.v1.PresenceService.BatchSubscribe:output_type -> bgs.protocol.presence.v1.BatchSubscribeResponse
	13, // 30: bgs.protocol.presence.v1.PresenceService.BatchUnsubscribe:output_type -> bgs.protocol.NoData
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_presence_service_proto_init() }
func file_bgs_low_pb_client_presence_service_proto_init() {
	if File_bgs_low_pb_client_presence_service_proto != nil {
		return
	}
	file_bgs_low_pb_client_presence_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_presence_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_presence_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_presence_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bgs_low_pb_client_presence_service_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_presence_service_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_presence_service_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_presence_service_proto = out.File
	file_bgs_low_pb_client_presence_service_proto_rawDesc = nil
	file_bgs_low_pb_client_presence_service_proto_goTypes = nil
	file_bgs_low_pb_client_presence_service_proto_depIdxs = nil
}
