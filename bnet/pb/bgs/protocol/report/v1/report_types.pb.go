// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bgs/low/pb/client/report_types.proto

package v1

import (
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	v1 "github.com/Gophercraft/core/bnet/pb/bgs/protocol/account/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpamReport_SpamSource int32

const (
	SpamReport_OTHER             SpamReport_SpamSource = 1
	SpamReport_FRIEND_INVITATION SpamReport_SpamSource = 2
	SpamReport_WHISPER           SpamReport_SpamSource = 3
	SpamReport_CHAT              SpamReport_SpamSource = 4
)

// Enum value maps for SpamReport_SpamSource.
var (
	SpamReport_SpamSource_name = map[int32]string{
		1: "OTHER",
		2: "FRIEND_INVITATION",
		3: "WHISPER",
		4: "CHAT",
	}
	SpamReport_SpamSource_value = map[string]int32{
		"OTHER":             1,
		"FRIEND_INVITATION": 2,
		"WHISPER":           3,
		"CHAT":              4,
	}
)

func (x SpamReport_SpamSource) Enum() *SpamReport_SpamSource {
	p := new(SpamReport_SpamSource)
	*p = x
	return p
}

func (x SpamReport_SpamSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpamReport_SpamSource) Descriptor() protoreflect.EnumDescriptor {
	return file_bgs_low_pb_client_report_types_proto_enumTypes[0].Descriptor()
}

func (SpamReport_SpamSource) Type() protoreflect.EnumType {
	return &file_bgs_low_pb_client_report_types_proto_enumTypes[0]
}

func (x SpamReport_SpamSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SpamReport_SpamSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SpamReport_SpamSource(num)
	return nil
}

// Deprecated: Use SpamReport_SpamSource.Descriptor instead.
func (SpamReport_SpamSource) EnumDescriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{2, 0}
}

type ReportType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDescription *string `protobuf:"bytes,1,opt,name=user_description,json=userDescription" json:"user_description,omitempty"`
	// Types that are assignable to Type:
	//
	//	*ReportType_CustomReport
	//	*ReportType_SpamReport
	//	*ReportType_HarassmentReport
	//	*ReportType_RealLifeThreatReport
	//	*ReportType_InappropriateBattleTagReport
	//	*ReportType_HackingReport
	//	*ReportType_BottingReport
	Type isReportType_Type `protobuf_oneof:"type"`
}

func (x *ReportType) Reset() {
	*x = ReportType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportType) ProtoMessage() {}

func (x *ReportType) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportType.ProtoReflect.Descriptor instead.
func (*ReportType) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{0}
}

func (x *ReportType) GetUserDescription() string {
	if x != nil && x.UserDescription != nil {
		return *x.UserDescription
	}
	return ""
}

func (m *ReportType) GetType() isReportType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ReportType) GetCustomReport() *CustomReport {
	if x, ok := x.GetType().(*ReportType_CustomReport); ok {
		return x.CustomReport
	}
	return nil
}

func (x *ReportType) GetSpamReport() *SpamReport {
	if x, ok := x.GetType().(*ReportType_SpamReport); ok {
		return x.SpamReport
	}
	return nil
}

func (x *ReportType) GetHarassmentReport() *HarassmentReport {
	if x, ok := x.GetType().(*ReportType_HarassmentReport); ok {
		return x.HarassmentReport
	}
	return nil
}

func (x *ReportType) GetRealLifeThreatReport() *RealLifeThreatReport {
	if x, ok := x.GetType().(*ReportType_RealLifeThreatReport); ok {
		return x.RealLifeThreatReport
	}
	return nil
}

func (x *ReportType) GetInappropriateBattleTagReport() *InappropriateBattleTagReport {
	if x, ok := x.GetType().(*ReportType_InappropriateBattleTagReport); ok {
		return x.InappropriateBattleTagReport
	}
	return nil
}

func (x *ReportType) GetHackingReport() *HackingReport {
	if x, ok := x.GetType().(*ReportType_HackingReport); ok {
		return x.HackingReport
	}
	return nil
}

func (x *ReportType) GetBottingReport() *BottingReport {
	if x, ok := x.GetType().(*ReportType_BottingReport); ok {
		return x.BottingReport
	}
	return nil
}

type isReportType_Type interface {
	isReportType_Type()
}

type ReportType_CustomReport struct {
	CustomReport *CustomReport `protobuf:"bytes,10,opt,name=custom_report,json=customReport,oneof"`
}

type ReportType_SpamReport struct {
	SpamReport *SpamReport `protobuf:"bytes,11,opt,name=spam_report,json=spamReport,oneof"`
}

type ReportType_HarassmentReport struct {
	HarassmentReport *HarassmentReport `protobuf:"bytes,12,opt,name=harassment_report,json=harassmentReport,oneof"`
}

type ReportType_RealLifeThreatReport struct {
	RealLifeThreatReport *RealLifeThreatReport `protobuf:"bytes,13,opt,name=real_life_threat_report,json=realLifeThreatReport,oneof"`
}

type ReportType_InappropriateBattleTagReport struct {
	InappropriateBattleTagReport *InappropriateBattleTagReport `protobuf:"bytes,14,opt,name=inappropriate_battle_tag_report,json=inappropriateBattleTagReport,oneof"`
}

type ReportType_HackingReport struct {
	HackingReport *HackingReport `protobuf:"bytes,15,opt,name=hacking_report,json=hackingReport,oneof"`
}

type ReportType_BottingReport struct {
	BottingReport *BottingReport `protobuf:"bytes,16,opt,name=botting_report,json=bottingReport,oneof"`
}

func (*ReportType_CustomReport) isReportType_Type() {}

func (*ReportType_SpamReport) isReportType_Type() {}

func (*ReportType_HarassmentReport) isReportType_Type() {}

func (*ReportType_RealLifeThreatReport) isReportType_Type() {}

func (*ReportType_InappropriateBattleTagReport) isReportType_Type() {}

func (*ReportType_HackingReport) isReportType_Type() {}

func (*ReportType_BottingReport) isReportType_Type() {}

type CustomReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Deprecated: Marked as deprecated in bgs/low/pb/client/report_types.proto.
	ProgramId *string               `protobuf:"bytes,2,opt,name=program_id,json=programId" json:"program_id,omitempty"`
	Attribute []*protocol.Attribute `protobuf:"bytes,3,rep,name=attribute" json:"attribute,omitempty"`
}

func (x *CustomReport) Reset() {
	*x = CustomReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomReport) ProtoMessage() {}

func (x *CustomReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomReport.ProtoReflect.Descriptor instead.
func (*CustomReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{1}
}

func (x *CustomReport) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// Deprecated: Marked as deprecated in bgs/low/pb/client/report_types.proto.
func (x *CustomReport) GetProgramId() string {
	if x != nil && x.ProgramId != nil {
		return *x.ProgramId
	}
	return ""
}

func (x *CustomReport) GetAttribute() []*protocol.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type SpamReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *v1.GameAccountHandle  `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Source *SpamReport_SpamSource `protobuf:"varint,2,opt,name=source,enum=bgs.protocol.report.v1.SpamReport_SpamSource,def=1" json:"source,omitempty"`
}

// Default values for SpamReport fields.
const (
	Default_SpamReport_Source = SpamReport_OTHER
)

func (x *SpamReport) Reset() {
	*x = SpamReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpamReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpamReport) ProtoMessage() {}

func (x *SpamReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpamReport.ProtoReflect.Descriptor instead.
func (*SpamReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{2}
}

func (x *SpamReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *SpamReport) GetSource() SpamReport_SpamSource {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return Default_SpamReport_Source
}

type HarassmentReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *v1.GameAccountHandle `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Text   *string               `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *HarassmentReport) Reset() {
	*x = HarassmentReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarassmentReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarassmentReport) ProtoMessage() {}

func (x *HarassmentReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarassmentReport.ProtoReflect.Descriptor instead.
func (*HarassmentReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{3}
}

func (x *HarassmentReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *HarassmentReport) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type RealLifeThreatReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *v1.GameAccountHandle `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Text   *string               `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (x *RealLifeThreatReport) Reset() {
	*x = RealLifeThreatReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealLifeThreatReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealLifeThreatReport) ProtoMessage() {}

func (x *RealLifeThreatReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealLifeThreatReport.ProtoReflect.Descriptor instead.
func (*RealLifeThreatReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{4}
}

func (x *RealLifeThreatReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RealLifeThreatReport) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type InappropriateBattleTagReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target    *v1.GameAccountHandle `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	BattleTag *string               `protobuf:"bytes,2,opt,name=battle_tag,json=battleTag" json:"battle_tag,omitempty"`
}

func (x *InappropriateBattleTagReport) Reset() {
	*x = InappropriateBattleTagReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InappropriateBattleTagReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InappropriateBattleTagReport) ProtoMessage() {}

func (x *InappropriateBattleTagReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InappropriateBattleTagReport.ProtoReflect.Descriptor instead.
func (*InappropriateBattleTagReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{5}
}

func (x *InappropriateBattleTagReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *InappropriateBattleTagReport) GetBattleTag() string {
	if x != nil && x.BattleTag != nil {
		return *x.BattleTag
	}
	return ""
}

type HackingReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *v1.GameAccountHandle `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (x *HackingReport) Reset() {
	*x = HackingReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HackingReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HackingReport) ProtoMessage() {}

func (x *HackingReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HackingReport.ProtoReflect.Descriptor instead.
func (*HackingReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{6}
}

func (x *HackingReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

type BottingReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *v1.GameAccountHandle `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (x *BottingReport) Reset() {
	*x = BottingReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BottingReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BottingReport) ProtoMessage() {}

func (x *BottingReport) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BottingReport.ProtoReflect.Descriptor instead.
func (*BottingReport) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{7}
}

func (x *BottingReport) GetTarget() *v1.GameAccountHandle {
	if x != nil {
		return x.Target
	}
	return nil
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportType           *string               `protobuf:"bytes,1,req,name=report_type,json=reportType" json:"report_type,omitempty"`
	Attribute            []*protocol.Attribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	ReportQos            *int32                `protobuf:"varint,3,opt,name=report_qos,json=reportQos,def=0" json:"report_qos,omitempty"`
	ReportingAccount     *protocol.EntityId    `protobuf:"bytes,4,opt,name=reporting_account,json=reportingAccount" json:"reporting_account,omitempty"`
	ReportingGameAccount *protocol.EntityId    `protobuf:"bytes,5,opt,name=reporting_game_account,json=reportingGameAccount" json:"reporting_game_account,omitempty"`
	ReportTimestamp      *uint64               `protobuf:"fixed64,6,opt,name=report_timestamp,json=reportTimestamp" json:"report_timestamp,omitempty"`
}

// Default values for Report fields.
const (
	Default_Report_ReportQos = int32(0)
)

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_report_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_report_types_proto_rawDescGZIP(), []int{8}
}

func (x *Report) GetReportType() string {
	if x != nil && x.ReportType != nil {
		return *x.ReportType
	}
	return ""
}

func (x *Report) GetAttribute() []*protocol.Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Report) GetReportQos() int32 {
	if x != nil && x.ReportQos != nil {
		return *x.ReportQos
	}
	return Default_Report_ReportQos
}

func (x *Report) GetReportingAccount() *protocol.EntityId {
	if x != nil {
		return x.ReportingAccount
	}
	return nil
}

func (x *Report) GetReportingGameAccount() *protocol.EntityId {
	if x != nil {
		return x.ReportingGameAccount
	}
	return nil
}

func (x *Report) GetReportTimestamp() uint64 {
	if x != nil && x.ReportTimestamp != nil {
		return *x.ReportTimestamp
	}
	return 0
}

var File_bgs_low_pb_client_report_types_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_report_types_proto_rawDesc = []byte{
	0x0a, 0x24, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x25,
	0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70,
	0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0x05, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4b, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x45,
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61,
	0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x6d, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x57, 0x0a, 0x11, 0x68, 0x61, 0x72, 0x61, 0x73, 0x73, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x72, 0x61, 0x73, 0x73,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x10, 0x68, 0x61,
	0x72, 0x61, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x65,
	0x0a, 0x17, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x66,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x14, 0x72, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x7d, 0x0a, 0x1f, 0x69, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x70, 0x72, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x70,
	0x72, 0x69, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x69, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x70,
	0x72, 0x69, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x68, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x68, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x62, 0x6f, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x6f, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7c, 0x0a, 0x0c,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0a, 0x53,
	0x70, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x4c, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x53, 0x70, 0x61, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x05, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x0a, 0x53,
	0x70, 0x61, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x49,
	0x4e, 0x56, 0x49, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x48, 0x49, 0x53, 0x50, 0x45, 0x52, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x41, 0x54,
	0x10, 0x04, 0x22, 0x6a, 0x0a, 0x10, 0x48, 0x61, 0x72, 0x61, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x6e,
	0x0a, 0x14, 0x52, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x81,
	0x01, 0x0a, 0x1c, 0x49, 0x6e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x70, 0x72, 0x69, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x42, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x61, 0x67, 0x22, 0x53, 0x0a, 0x0d, 0x48, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x53, 0x0a, 0x0d, 0x42, 0x6f, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xc0, 0x02, 0x0a,
	0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x71, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x6f,
	0x73, 0x12, 0x43, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x14,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x6f,
	0x70, 0x68, 0x65, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x62,
	0x6e, 0x65, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_report_types_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_report_types_proto_rawDescData = file_bgs_low_pb_client_report_types_proto_rawDesc
)

func file_bgs_low_pb_client_report_types_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_report_types_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_report_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_report_types_proto_rawDescData)
	})
	return file_bgs_low_pb_client_report_types_proto_rawDescData
}

var file_bgs_low_pb_client_report_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bgs_low_pb_client_report_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bgs_low_pb_client_report_types_proto_goTypes = []interface{}{
	(SpamReport_SpamSource)(0),           // 0: bgs.protocol.report.v1.SpamReport.SpamSource
	(*ReportType)(nil),                   // 1: bgs.protocol.report.v1.ReportType
	(*CustomReport)(nil),                 // 2: bgs.protocol.report.v1.CustomReport
	(*SpamReport)(nil),                   // 3: bgs.protocol.report.v1.SpamReport
	(*HarassmentReport)(nil),             // 4: bgs.protocol.report.v1.HarassmentReport
	(*RealLifeThreatReport)(nil),         // 5: bgs.protocol.report.v1.RealLifeThreatReport
	(*InappropriateBattleTagReport)(nil), // 6: bgs.protocol.report.v1.InappropriateBattleTagReport
	(*HackingReport)(nil),                // 7: bgs.protocol.report.v1.HackingReport
	(*BottingReport)(nil),                // 8: bgs.protocol.report.v1.BottingReport
	(*Report)(nil),                       // 9: bgs.protocol.report.v1.Report
	(*protocol.Attribute)(nil),           // 10: bgs.protocol.Attribute
	(*v1.GameAccountHandle)(nil),         // 11: bgs.protocol.account.v1.GameAccountHandle
	(*protocol.EntityId)(nil),            // 12: bgs.protocol.EntityId
}
var file_bgs_low_pb_client_report_types_proto_depIdxs = []int32{
	2,  // 0: bgs.protocol.report.v1.ReportType.custom_report:type_name -> bgs.protocol.report.v1.CustomReport
	3,  // 1: bgs.protocol.report.v1.ReportType.spam_report:type_name -> bgs.protocol.report.v1.SpamReport
	4,  // 2: bgs.protocol.report.v1.ReportType.harassment_report:type_name -> bgs.protocol.report.v1.HarassmentReport
	5,  // 3: bgs.protocol.report.v1.ReportType.real_life_threat_report:type_name -> bgs.protocol.report.v1.RealLifeThreatReport
	6,  // 4: bgs.protocol.report.v1.ReportType.inappropriate_battle_tag_report:type_name -> bgs.protocol.report.v1.InappropriateBattleTagReport
	7,  // 5: bgs.protocol.report.v1.ReportType.hacking_report:type_name -> bgs.protocol.report.v1.HackingReport
	8,  // 6: bgs.protocol.report.v1.ReportType.botting_report:type_name -> bgs.protocol.report.v1.BottingReport
	10, // 7: bgs.protocol.report.v1.CustomReport.attribute:type_name -> bgs.protocol.Attribute
	11, // 8: bgs.protocol.report.v1.SpamReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	0,  // 9: bgs.protocol.report.v1.SpamReport.source:type_name -> bgs.protocol.report.v1.SpamReport.SpamSource
	11, // 10: bgs.protocol.report.v1.HarassmentReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	11, // 11: bgs.protocol.report.v1.RealLifeThreatReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	11, // 12: bgs.protocol.report.v1.InappropriateBattleTagReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	11, // 13: bgs.protocol.report.v1.HackingReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	11, // 14: bgs.protocol.report.v1.BottingReport.target:type_name -> bgs.protocol.account.v1.GameAccountHandle
	10, // 15: bgs.protocol.report.v1.Report.attribute:type_name -> bgs.protocol.Attribute
	12, // 16: bgs.protocol.report.v1.Report.reporting_account:type_name -> bgs.protocol.EntityId
	12, // 17: bgs.protocol.report.v1.Report.reporting_game_account:type_name -> bgs.protocol.EntityId
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_report_types_proto_init() }
func file_bgs_low_pb_client_report_types_proto_init() {
	if File_bgs_low_pb_client_report_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_report_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpamReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarassmentReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealLifeThreatReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InappropriateBattleTagReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HackingReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BottingReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_report_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bgs_low_pb_client_report_types_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ReportType_CustomReport)(nil),
		(*ReportType_SpamReport)(nil),
		(*ReportType_HarassmentReport)(nil),
		(*ReportType_RealLifeThreatReport)(nil),
		(*ReportType_InappropriateBattleTagReport)(nil),
		(*ReportType_HackingReport)(nil),
		(*ReportType_BottingReport)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_report_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_report_types_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_report_types_proto_depIdxs,
		EnumInfos:         file_bgs_low_pb_client_report_types_proto_enumTypes,
		MessageInfos:      file_bgs_low_pb_client_report_types_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_report_types_proto = out.File
	file_bgs_low_pb_client_report_types_proto_rawDesc = nil
	file_bgs_low_pb_client_report_types_proto_goTypes = nil
	file_bgs_low_pb_client_report_types_proto_depIdxs = nil
}
