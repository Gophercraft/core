// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bgs/low/pb/client/club_notification.proto

package v1

import (
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of bgs/low/pb/client/rpc_types.proto.

type NO_RESPONSE = protocol.NO_RESPONSE
type Address = protocol.Address
type ProcessId = protocol.ProcessId
type ObjectAddress = protocol.ObjectAddress

const Default_ObjectAddress_ObjectId = protocol.Default_ObjectAddress_ObjectId

type NoData = protocol.NoData
type ErrorInfo = protocol.ErrorInfo
type FanoutTarget = protocol.FanoutTarget
type Header = protocol.Header

const Default_Header_ObjectId = protocol.Default_Header_ObjectId
const Default_Header_Size = protocol.Default_Header_Size
const Default_Header_Status = protocol.Default_Header_Status

type SubscribeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *MemberId     `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId   *uint64       `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Club     *Club         `protobuf:"bytes,4,opt,name=club" json:"club,omitempty"`
	View     *ClubView     `protobuf:"bytes,5,opt,name=view" json:"view,omitempty"`
	Settings *ClubSettings `protobuf:"bytes,10,opt,name=settings" json:"settings,omitempty"`
	Member   *Member       `protobuf:"bytes,11,opt,name=member" json:"member,omitempty"`
}

func (x *SubscribeNotification) Reset() {
	*x = SubscribeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNotification) ProtoMessage() {}

func (x *SubscribeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNotification.ProtoReflect.Descriptor instead.
func (*SubscribeNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SubscribeNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *SubscribeNotification) GetClub() *Club {
	if x != nil {
		return x.Club
	}
	return nil
}

func (x *SubscribeNotification) GetView() *ClubView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *SubscribeNotification) GetSettings() *ClubSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *SubscribeNotification) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type UnsubscribeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64   `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
}

func (x *UnsubscribeNotification) Reset() {
	*x = UnsubscribeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeNotification) ProtoMessage() {}

func (x *UnsubscribeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeNotification.ProtoReflect.Descriptor instead.
func (*UnsubscribeNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{1}
}

func (x *UnsubscribeNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *UnsubscribeNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

type StateChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId            `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64              `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Assignment *ClubStateAssignment `protobuf:"bytes,5,opt,name=assignment" json:"assignment,omitempty"`
}

func (x *StateChangedNotification) Reset() {
	*x = StateChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangedNotification) ProtoMessage() {}

func (x *StateChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangedNotification.ProtoReflect.Descriptor instead.
func (*StateChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{2}
}

func (x *StateChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StateChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StateChangedNotification) GetAssignment() *ClubStateAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type SettingsChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId               `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64                 `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Assignment *ClubSettingsAssignment `protobuf:"bytes,4,opt,name=assignment" json:"assignment,omitempty"`
}

func (x *SettingsChangedNotification) Reset() {
	*x = SettingsChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsChangedNotification) ProtoMessage() {}

func (x *SettingsChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsChangedNotification.ProtoReflect.Descriptor instead.
func (*SettingsChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SettingsChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SettingsChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *SettingsChangedNotification) GetAssignment() *ClubSettingsAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type MemberAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64   `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Member  []*Member `protobuf:"bytes,4,rep,name=member" json:"member,omitempty"`
}

func (x *MemberAddedNotification) Reset() {
	*x = MemberAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberAddedNotification) ProtoMessage() {}

func (x *MemberAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberAddedNotification.ProtoReflect.Descriptor instead.
func (*MemberAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MemberAddedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *MemberAddedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *MemberAddedNotification) GetMember() []*Member {
	if x != nil {
		return x.Member
	}
	return nil
}

type MemberRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId                  `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64                    `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Member  []*MemberRemovedAssignment `protobuf:"bytes,4,rep,name=member" json:"member,omitempty"`
}

func (x *MemberRemovedNotification) Reset() {
	*x = MemberRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRemovedNotification) ProtoMessage() {}

func (x *MemberRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRemovedNotification.ProtoReflect.Descriptor instead.
func (*MemberRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MemberRemovedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *MemberRemovedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *MemberRemovedNotification) GetMember() []*MemberRemovedAssignment {
	if x != nil {
		return x.Member
	}
	return nil
}

type MemberStateChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId                `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64                  `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Assignment []*MemberStateAssignment `protobuf:"bytes,4,rep,name=assignment" json:"assignment,omitempty"`
}

func (x *MemberStateChangedNotification) Reset() {
	*x = MemberStateChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStateChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStateChangedNotification) ProtoMessage() {}

func (x *MemberStateChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStateChangedNotification.ProtoReflect.Descriptor instead.
func (*MemberStateChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{6}
}

func (x *MemberStateChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *MemberStateChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *MemberStateChangedNotification) GetAssignment() []*MemberStateAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type SubscriberStateChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId                    `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64                      `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Assignment []*SubscriberStateAssignment `protobuf:"bytes,4,rep,name=assignment" json:"assignment,omitempty"`
}

func (x *SubscriberStateChangedNotification) Reset() {
	*x = SubscriberStateChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriberStateChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriberStateChangedNotification) ProtoMessage() {}

func (x *SubscriberStateChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriberStateChangedNotification.ProtoReflect.Descriptor instead.
func (*SubscriberStateChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{7}
}

func (x *SubscriberStateChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SubscriberStateChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *SubscriberStateChangedNotification) GetAssignment() []*SubscriberStateAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type MemberRoleChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId         `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64           `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Assignment []*RoleAssignment `protobuf:"bytes,4,rep,name=assignment" json:"assignment,omitempty"`
}

func (x *MemberRoleChangedNotification) Reset() {
	*x = MemberRoleChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRoleChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRoleChangedNotification) ProtoMessage() {}

func (x *MemberRoleChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRoleChangedNotification.ProtoReflect.Descriptor instead.
func (*MemberRoleChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{8}
}

func (x *MemberRoleChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *MemberRoleChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *MemberRoleChangedNotification) GetAssignment() []*RoleAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type InvitationAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId       `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64         `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Invitation *ClubInvitation `protobuf:"bytes,4,opt,name=invitation" json:"invitation,omitempty"`
}

func (x *InvitationAddedNotification) Reset() {
	*x = InvitationAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationAddedNotification) ProtoMessage() {}

func (x *InvitationAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationAddedNotification.ProtoReflect.Descriptor instead.
func (*InvitationAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{9}
}

func (x *InvitationAddedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *InvitationAddedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *InvitationAddedNotification) GetInvitation() *ClubInvitation {
	if x != nil {
		return x.Invitation
	}
	return nil
}

type InvitationRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId      *MemberId                         `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId       *uint64                           `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	InvitationId *uint64                           `protobuf:"fixed64,4,opt,name=invitation_id,json=invitationId" json:"invitation_id,omitempty"`
	Reason       *protocol.InvitationRemovedReason `protobuf:"varint,5,opt,name=reason,enum=bgs.protocol.InvitationRemovedReason" json:"reason,omitempty"`
}

func (x *InvitationRemovedNotification) Reset() {
	*x = InvitationRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvitationRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitationRemovedNotification) ProtoMessage() {}

func (x *InvitationRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitationRemovedNotification.ProtoReflect.Descriptor instead.
func (*InvitationRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{10}
}

func (x *InvitationRemovedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *InvitationRemovedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *InvitationRemovedNotification) GetInvitationId() uint64 {
	if x != nil && x.InvitationId != nil {
		return *x.InvitationId
	}
	return 0
}

func (x *InvitationRemovedNotification) GetReason() protocol.InvitationRemovedReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return protocol.InvitationRemovedReason(0)
}

type SuggestionAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId       `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64         `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Suggestion *ClubSuggestion `protobuf:"bytes,4,opt,name=suggestion" json:"suggestion,omitempty"`
}

func (x *SuggestionAddedNotification) Reset() {
	*x = SuggestionAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionAddedNotification) ProtoMessage() {}

func (x *SuggestionAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionAddedNotification.ProtoReflect.Descriptor instead.
func (*SuggestionAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{11}
}

func (x *SuggestionAddedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SuggestionAddedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *SuggestionAddedNotification) GetSuggestion() *ClubSuggestion {
	if x != nil {
		return x.Suggestion
	}
	return nil
}

type SuggestionRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId      *MemberId                         `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId       *uint64                           `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	SuggestionId *uint64                           `protobuf:"fixed64,4,opt,name=suggestion_id,json=suggestionId" json:"suggestion_id,omitempty"`
	Reason       *protocol.SuggestionRemovedReason `protobuf:"varint,5,opt,name=reason,enum=bgs.protocol.SuggestionRemovedReason" json:"reason,omitempty"`
}

func (x *SuggestionRemovedNotification) Reset() {
	*x = SuggestionRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestionRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestionRemovedNotification) ProtoMessage() {}

func (x *SuggestionRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestionRemovedNotification.ProtoReflect.Descriptor instead.
func (*SuggestionRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{12}
}

func (x *SuggestionRemovedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SuggestionRemovedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *SuggestionRemovedNotification) GetSuggestionId() uint64 {
	if x != nil && x.SuggestionId != nil {
		return *x.SuggestionId
	}
	return 0
}

func (x *SuggestionRemovedNotification) GetReason() protocol.SuggestionRemovedReason {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return protocol.SuggestionRemovedReason(0)
}

type StreamAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64   `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Stream  *Stream   `protobuf:"bytes,4,opt,name=stream" json:"stream,omitempty"`
}

func (x *StreamAddedNotification) Reset() {
	*x = StreamAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAddedNotification) ProtoMessage() {}

func (x *StreamAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAddedNotification.ProtoReflect.Descriptor instead.
func (*StreamAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{13}
}

func (x *StreamAddedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamAddedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamAddedNotification) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type StreamRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *MemberId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId   *uint64   `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	StreamId *uint64   `protobuf:"varint,4,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
}

func (x *StreamRemovedNotification) Reset() {
	*x = StreamRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRemovedNotification) ProtoMessage() {}

func (x *StreamRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRemovedNotification.ProtoReflect.Descriptor instead.
func (*StreamRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{14}
}

func (x *StreamRemovedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamRemovedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamRemovedNotification) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

type StreamStateChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    *MemberId              `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId     *uint64                `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	StreamId   *uint64                `protobuf:"varint,4,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Assignment *StreamStateAssignment `protobuf:"bytes,5,opt,name=assignment" json:"assignment,omitempty"`
}

func (x *StreamStateChangedNotification) Reset() {
	*x = StreamStateChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamStateChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStateChangedNotification) ProtoMessage() {}

func (x *StreamStateChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStateChangedNotification.ProtoReflect.Descriptor instead.
func (*StreamStateChangedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{15}
}

func (x *StreamStateChangedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamStateChangedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamStateChangedNotification) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *StreamStateChangedNotification) GetAssignment() *StreamStateAssignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

type StreamMessageAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *MemberId      `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId   *uint64        `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	StreamId *uint64        `protobuf:"varint,4,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Message  *StreamMessage `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
}

func (x *StreamMessageAddedNotification) Reset() {
	*x = StreamMessageAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageAddedNotification) ProtoMessage() {}

func (x *StreamMessageAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageAddedNotification.ProtoReflect.Descriptor instead.
func (*StreamMessageAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{16}
}

func (x *StreamMessageAddedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamMessageAddedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamMessageAddedNotification) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *StreamMessageAddedNotification) GetMessage() *StreamMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type StreamMessageUpdatedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *MemberId      `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId   *uint64        `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	StreamId *uint64        `protobuf:"varint,4,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Message  *StreamMessage `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
}

func (x *StreamMessageUpdatedNotification) Reset() {
	*x = StreamMessageUpdatedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageUpdatedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageUpdatedNotification) ProtoMessage() {}

func (x *StreamMessageUpdatedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageUpdatedNotification.ProtoReflect.Descriptor instead.
func (*StreamMessageUpdatedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{17}
}

func (x *StreamMessageUpdatedNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamMessageUpdatedNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamMessageUpdatedNotification) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *StreamMessageUpdatedNotification) GetMessage() *StreamMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type StreamTypingIndicatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId   *MemberId                `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId    *uint64                  `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	StreamId  *uint64                  `protobuf:"varint,4,opt,name=stream_id,json=streamId" json:"stream_id,omitempty"`
	Indicator []*StreamTypingIndicator `protobuf:"bytes,5,rep,name=indicator" json:"indicator,omitempty"`
}

func (x *StreamTypingIndicatorNotification) Reset() {
	*x = StreamTypingIndicatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamTypingIndicatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamTypingIndicatorNotification) ProtoMessage() {}

func (x *StreamTypingIndicatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamTypingIndicatorNotification.ProtoReflect.Descriptor instead.
func (*StreamTypingIndicatorNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{18}
}

func (x *StreamTypingIndicatorNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamTypingIndicatorNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamTypingIndicatorNotification) GetStreamId() uint64 {
	if x != nil && x.StreamId != nil {
		return *x.StreamId
	}
	return 0
}

func (x *StreamTypingIndicatorNotification) GetIndicator() []*StreamTypingIndicator {
	if x != nil {
		return x.Indicator
	}
	return nil
}

type StreamUnreadIndicatorNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId        `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64          `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	Event   *StreamEventTime `protobuf:"bytes,4,opt,name=event" json:"event,omitempty"`
	Message *StreamMessage   `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
}

func (x *StreamUnreadIndicatorNotification) Reset() {
	*x = StreamUnreadIndicatorNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamUnreadIndicatorNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUnreadIndicatorNotification) ProtoMessage() {}

func (x *StreamUnreadIndicatorNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUnreadIndicatorNotification.ProtoReflect.Descriptor instead.
func (*StreamUnreadIndicatorNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{19}
}

func (x *StreamUnreadIndicatorNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamUnreadIndicatorNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamUnreadIndicatorNotification) GetEvent() *StreamEventTime {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *StreamUnreadIndicatorNotification) GetMessage() *StreamMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type StreamAdvanceViewTimeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *MemberId                `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ClubId  *uint64                  `protobuf:"varint,3,opt,name=club_id,json=clubId" json:"club_id,omitempty"`
	View    []*StreamAdvanceViewTime `protobuf:"bytes,4,rep,name=view" json:"view,omitempty"`
}

func (x *StreamAdvanceViewTimeNotification) Reset() {
	*x = StreamAdvanceViewTimeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAdvanceViewTimeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAdvanceViewTimeNotification) ProtoMessage() {}

func (x *StreamAdvanceViewTimeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_club_notification_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAdvanceViewTimeNotification.ProtoReflect.Descriptor instead.
func (*StreamAdvanceViewTimeNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_club_notification_proto_rawDescGZIP(), []int{20}
}

func (x *StreamAdvanceViewTimeNotification) GetAgentId() *MemberId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *StreamAdvanceViewTimeNotification) GetClubId() uint64 {
	if x != nil && x.ClubId != nil {
		return *x.ClubId
	}
	return 0
}

func (x *StreamAdvanceViewTimeNotification) GetView() []*StreamAdvanceViewTime {
	if x != nil {
		return x.View
	}
	return nil
}

var File_bgs_low_pb_client_club_notification_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_club_notification_proto_rawDesc = []byte{
	0x0a, 0x29, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x1a, 0x22, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70,
	0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x15, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62,
	0x52, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x12, 0x32, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x6d, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22,
	0xb9, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x49, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x1b,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12,
	0x4c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x01,
	0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63,
	0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xc1, 0x01, 0x0a,
	0x1e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75,
	0x62, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xc9, 0x01, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a,
	0x1d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x1b, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x1d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb7, 0x01, 0x0a,
	0x1b, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x44, 0x0a, 0x0a, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x62,
	0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0xa3, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x20, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdf,
	0x01, 0x0a, 0x21, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0xf3, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x50, 0x00, 0x50,
	0x01,
}

var (
	file_bgs_low_pb_client_club_notification_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_club_notification_proto_rawDescData = file_bgs_low_pb_client_club_notification_proto_rawDesc
)

func file_bgs_low_pb_client_club_notification_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_club_notification_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_club_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_club_notification_proto_rawDescData)
	})
	return file_bgs_low_pb_client_club_notification_proto_rawDescData
}

var file_bgs_low_pb_client_club_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_bgs_low_pb_client_club_notification_proto_goTypes = []interface{}{
	(*SubscribeNotification)(nil),              // 0: bgs.protocol.club.v1.SubscribeNotification
	(*UnsubscribeNotification)(nil),            // 1: bgs.protocol.club.v1.UnsubscribeNotification
	(*StateChangedNotification)(nil),           // 2: bgs.protocol.club.v1.StateChangedNotification
	(*SettingsChangedNotification)(nil),        // 3: bgs.protocol.club.v1.SettingsChangedNotification
	(*MemberAddedNotification)(nil),            // 4: bgs.protocol.club.v1.MemberAddedNotification
	(*MemberRemovedNotification)(nil),          // 5: bgs.protocol.club.v1.MemberRemovedNotification
	(*MemberStateChangedNotification)(nil),     // 6: bgs.protocol.club.v1.MemberStateChangedNotification
	(*SubscriberStateChangedNotification)(nil), // 7: bgs.protocol.club.v1.SubscriberStateChangedNotification
	(*MemberRoleChangedNotification)(nil),      // 8: bgs.protocol.club.v1.MemberRoleChangedNotification
	(*InvitationAddedNotification)(nil),        // 9: bgs.protocol.club.v1.InvitationAddedNotification
	(*InvitationRemovedNotification)(nil),      // 10: bgs.protocol.club.v1.InvitationRemovedNotification
	(*SuggestionAddedNotification)(nil),        // 11: bgs.protocol.club.v1.SuggestionAddedNotification
	(*SuggestionRemovedNotification)(nil),      // 12: bgs.protocol.club.v1.SuggestionRemovedNotification
	(*StreamAddedNotification)(nil),            // 13: bgs.protocol.club.v1.StreamAddedNotification
	(*StreamRemovedNotification)(nil),          // 14: bgs.protocol.club.v1.StreamRemovedNotification
	(*StreamStateChangedNotification)(nil),     // 15: bgs.protocol.club.v1.StreamStateChangedNotification
	(*StreamMessageAddedNotification)(nil),     // 16: bgs.protocol.club.v1.StreamMessageAddedNotification
	(*StreamMessageUpdatedNotification)(nil),   // 17: bgs.protocol.club.v1.StreamMessageUpdatedNotification
	(*StreamTypingIndicatorNotification)(nil),  // 18: bgs.protocol.club.v1.StreamTypingIndicatorNotification
	(*StreamUnreadIndicatorNotification)(nil),  // 19: bgs.protocol.club.v1.StreamUnreadIndicatorNotification
	(*StreamAdvanceViewTimeNotification)(nil),  // 20: bgs.protocol.club.v1.StreamAdvanceViewTimeNotification
	(*MemberId)(nil),                           // 21: bgs.protocol.club.v1.MemberId
	(*Club)(nil),                               // 22: bgs.protocol.club.v1.Club
	(*ClubView)(nil),                           // 23: bgs.protocol.club.v1.ClubView
	(*ClubSettings)(nil),                       // 24: bgs.protocol.club.v1.ClubSettings
	(*Member)(nil),                             // 25: bgs.protocol.club.v1.Member
	(*ClubStateAssignment)(nil),                // 26: bgs.protocol.club.v1.ClubStateAssignment
	(*ClubSettingsAssignment)(nil),             // 27: bgs.protocol.club.v1.ClubSettingsAssignment
	(*MemberRemovedAssignment)(nil),            // 28: bgs.protocol.club.v1.MemberRemovedAssignment
	(*MemberStateAssignment)(nil),              // 29: bgs.protocol.club.v1.MemberStateAssignment
	(*SubscriberStateAssignment)(nil),          // 30: bgs.protocol.club.v1.SubscriberStateAssignment
	(*RoleAssignment)(nil),                     // 31: bgs.protocol.club.v1.RoleAssignment
	(*ClubInvitation)(nil),                     // 32: bgs.protocol.club.v1.ClubInvitation
	(protocol.InvitationRemovedReason)(0),      // 33: bgs.protocol.InvitationRemovedReason
	(*ClubSuggestion)(nil),                     // 34: bgs.protocol.club.v1.ClubSuggestion
	(protocol.SuggestionRemovedReason)(0),      // 35: bgs.protocol.SuggestionRemovedReason
	(*Stream)(nil),                             // 36: bgs.protocol.club.v1.Stream
	(*StreamStateAssignment)(nil),              // 37: bgs.protocol.club.v1.StreamStateAssignment
	(*StreamMessage)(nil),                      // 38: bgs.protocol.club.v1.StreamMessage
	(*StreamTypingIndicator)(nil),              // 39: bgs.protocol.club.v1.StreamTypingIndicator
	(*StreamEventTime)(nil),                    // 40: bgs.protocol.club.v1.StreamEventTime
	(*StreamAdvanceViewTime)(nil),              // 41: bgs.protocol.club.v1.StreamAdvanceViewTime
}
var file_bgs_low_pb_client_club_notification_proto_depIdxs = []int32{
	21, // 0: bgs.protocol.club.v1.SubscribeNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	22, // 1: bgs.protocol.club.v1.SubscribeNotification.club:type_name -> bgs.protocol.club.v1.Club
	23, // 2: bgs.protocol.club.v1.SubscribeNotification.view:type_name -> bgs.protocol.club.v1.ClubView
	24, // 3: bgs.protocol.club.v1.SubscribeNotification.settings:type_name -> bgs.protocol.club.v1.ClubSettings
	25, // 4: bgs.protocol.club.v1.SubscribeNotification.member:type_name -> bgs.protocol.club.v1.Member
	21, // 5: bgs.protocol.club.v1.UnsubscribeNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	21, // 6: bgs.protocol.club.v1.StateChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	26, // 7: bgs.protocol.club.v1.StateChangedNotification.assignment:type_name -> bgs.protocol.club.v1.ClubStateAssignment
	21, // 8: bgs.protocol.club.v1.SettingsChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	27, // 9: bgs.protocol.club.v1.SettingsChangedNotification.assignment:type_name -> bgs.protocol.club.v1.ClubSettingsAssignment
	21, // 10: bgs.protocol.club.v1.MemberAddedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	25, // 11: bgs.protocol.club.v1.MemberAddedNotification.member:type_name -> bgs.protocol.club.v1.Member
	21, // 12: bgs.protocol.club.v1.MemberRemovedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	28, // 13: bgs.protocol.club.v1.MemberRemovedNotification.member:type_name -> bgs.protocol.club.v1.MemberRemovedAssignment
	21, // 14: bgs.protocol.club.v1.MemberStateChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	29, // 15: bgs.protocol.club.v1.MemberStateChangedNotification.assignment:type_name -> bgs.protocol.club.v1.MemberStateAssignment
	21, // 16: bgs.protocol.club.v1.SubscriberStateChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	30, // 17: bgs.protocol.club.v1.SubscriberStateChangedNotification.assignment:type_name -> bgs.protocol.club.v1.SubscriberStateAssignment
	21, // 18: bgs.protocol.club.v1.MemberRoleChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	31, // 19: bgs.protocol.club.v1.MemberRoleChangedNotification.assignment:type_name -> bgs.protocol.club.v1.RoleAssignment
	21, // 20: bgs.protocol.club.v1.InvitationAddedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	32, // 21: bgs.protocol.club.v1.InvitationAddedNotification.invitation:type_name -> bgs.protocol.club.v1.ClubInvitation
	21, // 22: bgs.protocol.club.v1.InvitationRemovedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	33, // 23: bgs.protocol.club.v1.InvitationRemovedNotification.reason:type_name -> bgs.protocol.InvitationRemovedReason
	21, // 24: bgs.protocol.club.v1.SuggestionAddedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	34, // 25: bgs.protocol.club.v1.SuggestionAddedNotification.suggestion:type_name -> bgs.protocol.club.v1.ClubSuggestion
	21, // 26: bgs.protocol.club.v1.SuggestionRemovedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	35, // 27: bgs.protocol.club.v1.SuggestionRemovedNotification.reason:type_name -> bgs.protocol.SuggestionRemovedReason
	21, // 28: bgs.protocol.club.v1.StreamAddedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	36, // 29: bgs.protocol.club.v1.StreamAddedNotification.stream:type_name -> bgs.protocol.club.v1.Stream
	21, // 30: bgs.protocol.club.v1.StreamRemovedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	21, // 31: bgs.protocol.club.v1.StreamStateChangedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	37, // 32: bgs.protocol.club.v1.StreamStateChangedNotification.assignment:type_name -> bgs.protocol.club.v1.StreamStateAssignment
	21, // 33: bgs.protocol.club.v1.StreamMessageAddedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	38, // 34: bgs.protocol.club.v1.StreamMessageAddedNotification.message:type_name -> bgs.protocol.club.v1.StreamMessage
	21, // 35: bgs.protocol.club.v1.StreamMessageUpdatedNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	38, // 36: bgs.protocol.club.v1.StreamMessageUpdatedNotification.message:type_name -> bgs.protocol.club.v1.StreamMessage
	21, // 37: bgs.protocol.club.v1.StreamTypingIndicatorNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	39, // 38: bgs.protocol.club.v1.StreamTypingIndicatorNotification.indicator:type_name -> bgs.protocol.club.v1.StreamTypingIndicator
	21, // 39: bgs.protocol.club.v1.StreamUnreadIndicatorNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	40, // 40: bgs.protocol.club.v1.StreamUnreadIndicatorNotification.event:type_name -> bgs.protocol.club.v1.StreamEventTime
	38, // 41: bgs.protocol.club.v1.StreamUnreadIndicatorNotification.message:type_name -> bgs.protocol.club.v1.StreamMessage
	21, // 42: bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.agent_id:type_name -> bgs.protocol.club.v1.MemberId
	41, // 43: bgs.protocol.club.v1.StreamAdvanceViewTimeNotification.view:type_name -> bgs.protocol.club.v1.StreamAdvanceViewTime
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_club_notification_proto_init() }
func file_bgs_low_pb_client_club_notification_proto_init() {
	if File_bgs_low_pb_client_club_notification_proto != nil {
		return
	}
	file_bgs_low_pb_client_club_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_club_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStateChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriberStateChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRoleChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvitationRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestionRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamStateChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageUpdatedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamTypingIndicatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamUnreadIndicatorNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_club_notification_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAdvanceViewTimeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_club_notification_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bgs_low_pb_client_club_notification_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_club_notification_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_club_notification_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_club_notification_proto = out.File
	file_bgs_low_pb_client_club_notification_proto_rawDesc = nil
	file_bgs_low_pb_client_club_notification_proto_goTypes = nil
	file_bgs_low_pb_client_club_notification_proto_depIdxs = nil
}
