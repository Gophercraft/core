// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bgs/low/pb/client/user_manager_service.proto

package v1

import (
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ObjectId *uint64            `protobuf:"varint,2,req,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *SubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockedPlayers []*BlockedPlayer `protobuf:"bytes,1,rep,name=blocked_players,json=blockedPlayers" json:"blocked_players,omitempty"`
	RecentPlayers  []*RecentPlayer  `protobuf:"bytes,2,rep,name=recent_players,json=recentPlayers" json:"recent_players,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeResponse) GetBlockedPlayers() []*BlockedPlayer {
	if x != nil {
		return x.BlockedPlayers
	}
	return nil
}

func (x *SubscribeResponse) GetRecentPlayers() []*RecentPlayer {
	if x != nil {
		return x.RecentPlayers
	}
	return nil
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	ObjectId *uint64            `protobuf:"varint,2,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *UnsubscribeRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *UnsubscribeRequest) GetObjectId() uint64 {
	if x != nil && x.ObjectId != nil {
		return *x.ObjectId
	}
	return 0
}

type AddRecentPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*RecentPlayer    `protobuf:"bytes,1,rep,name=players" json:"players,omitempty"`
	AgentId *protocol.EntityId `protobuf:"bytes,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Program *uint32            `protobuf:"varint,3,opt,name=program" json:"program,omitempty"`
}

func (x *AddRecentPlayersRequest) Reset() {
	*x = AddRecentPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRecentPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRecentPlayersRequest) ProtoMessage() {}

func (x *AddRecentPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRecentPlayersRequest.ProtoReflect.Descriptor instead.
func (*AddRecentPlayersRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddRecentPlayersRequest) GetPlayers() []*RecentPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *AddRecentPlayersRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *AddRecentPlayersRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

type ClearRecentPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	Program *uint32            `protobuf:"varint,2,opt,name=program" json:"program,omitempty"`
}

func (x *ClearRecentPlayersRequest) Reset() {
	*x = ClearRecentPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRecentPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRecentPlayersRequest) ProtoMessage() {}

func (x *ClearRecentPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRecentPlayersRequest.ProtoReflect.Descriptor instead.
func (*ClearRecentPlayersRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *ClearRecentPlayersRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *ClearRecentPlayersRequest) GetProgram() uint32 {
	if x != nil && x.Program != nil {
		return *x.Program
	}
	return 0
}

type BlockPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	TargetId *protocol.EntityId `protobuf:"bytes,2,req,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (x *BlockPlayerRequest) Reset() {
	*x = BlockPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPlayerRequest) ProtoMessage() {}

func (x *BlockPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPlayerRequest.ProtoReflect.Descriptor instead.
func (*BlockPlayerRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{5}
}

func (x *BlockPlayerRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *BlockPlayerRequest) GetTargetId() *protocol.EntityId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

type UnblockPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  *protocol.EntityId `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
	TargetId *protocol.EntityId `protobuf:"bytes,2,req,name=target_id,json=targetId" json:"target_id,omitempty"`
}

func (x *UnblockPlayerRequest) Reset() {
	*x = UnblockPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnblockPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockPlayerRequest) ProtoMessage() {}

func (x *UnblockPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockPlayerRequest.ProtoReflect.Descriptor instead.
func (*UnblockPlayerRequest) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *UnblockPlayerRequest) GetAgentId() *protocol.EntityId {
	if x != nil {
		return x.AgentId
	}
	return nil
}

func (x *UnblockPlayerRequest) GetTargetId() *protocol.EntityId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

type BlockedPlayerAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player        *BlockedPlayer     `protobuf:"bytes,1,req,name=player" json:"player,omitempty"`
	GameAccountId *protocol.EntityId `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	AccountId     *protocol.EntityId `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *BlockedPlayerAddedNotification) Reset() {
	*x = BlockedPlayerAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockedPlayerAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockedPlayerAddedNotification) ProtoMessage() {}

func (x *BlockedPlayerAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockedPlayerAddedNotification.ProtoReflect.Descriptor instead.
func (*BlockedPlayerAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{7}
}

func (x *BlockedPlayerAddedNotification) GetPlayer() *BlockedPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BlockedPlayerAddedNotification) GetGameAccountId() *protocol.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

func (x *BlockedPlayerAddedNotification) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type BlockedPlayerRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player        *BlockedPlayer     `protobuf:"bytes,1,req,name=player" json:"player,omitempty"`
	GameAccountId *protocol.EntityId `protobuf:"bytes,2,opt,name=game_account_id,json=gameAccountId" json:"game_account_id,omitempty"`
	AccountId     *protocol.EntityId `protobuf:"bytes,3,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *BlockedPlayerRemovedNotification) Reset() {
	*x = BlockedPlayerRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockedPlayerRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockedPlayerRemovedNotification) ProtoMessage() {}

func (x *BlockedPlayerRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockedPlayerRemovedNotification.ProtoReflect.Descriptor instead.
func (*BlockedPlayerRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{8}
}

func (x *BlockedPlayerRemovedNotification) GetPlayer() *BlockedPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *BlockedPlayerRemovedNotification) GetGameAccountId() *protocol.EntityId {
	if x != nil {
		return x.GameAccountId
	}
	return nil
}

func (x *BlockedPlayerRemovedNotification) GetAccountId() *protocol.EntityId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type RecentPlayersAddedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player []*RecentPlayer `protobuf:"bytes,1,rep,name=player" json:"player,omitempty"`
}

func (x *RecentPlayersAddedNotification) Reset() {
	*x = RecentPlayersAddedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentPlayersAddedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentPlayersAddedNotification) ProtoMessage() {}

func (x *RecentPlayersAddedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentPlayersAddedNotification.ProtoReflect.Descriptor instead.
func (*RecentPlayersAddedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{9}
}

func (x *RecentPlayersAddedNotification) GetPlayer() []*RecentPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type RecentPlayersRemovedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player []*RecentPlayer `protobuf:"bytes,1,rep,name=player" json:"player,omitempty"`
}

func (x *RecentPlayersRemovedNotification) Reset() {
	*x = RecentPlayersRemovedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecentPlayersRemovedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecentPlayersRemovedNotification) ProtoMessage() {}

func (x *RecentPlayersRemovedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_bgs_low_pb_client_user_manager_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecentPlayersRemovedNotification.ProtoReflect.Descriptor instead.
func (*RecentPlayersRemovedNotification) Descriptor() ([]byte, []int) {
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP(), []int{10}
}

func (x *RecentPlayersRemovedNotification) GetPlayer() []*RecentPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

var File_bgs_low_pb_client_user_manager_service_proto protoreflect.FileDescriptor

var file_bgs_low_pb_client_user_manager_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x2a, 0x62, 0x67,
	0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f,
	0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x62, 0x67, 0x73, 0x2f, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x62, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x51, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x68, 0x0a, 0x19, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x22, 0x7c, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x7e, 0x0a, 0x14, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x22, 0xdc, 0x01, 0x0a, 0x1e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xde, 0x01, 0x0a, 0x20, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x67, 0x61, 0x6d,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x64, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x20, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32,
	0xb3, 0x06, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x2e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x01, 0x12, 0x67, 0x0a, 0x10,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x35, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82,
	0xf9, 0x2b, 0x02, 0x08, 0x0a, 0x12, 0x6b, 0x0a, 0x12, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x37, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02,
	0x08, 0x0b, 0x12, 0x5d, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x30, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08,
	0x14, 0x12, 0x61, 0x0a, 0x0d, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x32, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9,
	0x2b, 0x02, 0x08, 0x15, 0x12, 0x67, 0x0a, 0x15, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e,
	0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x28, 0x12, 0x5d, 0x0a,
	0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x30, 0x2e, 0x62,
	0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x33, 0x1a, 0x47, 0x82, 0xf9,
	0x2b, 0x3d, 0x0a, 0x2d, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x8a,
	0xf9, 0x2b, 0x02, 0x10, 0x01, 0x32, 0xbb, 0x04, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x77, 0x0a,
	0x14, 0x4f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x3c, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x22, 0x06,
	0x82, 0xf9, 0x2b, 0x02, 0x08, 0x01, 0x12, 0x7b, 0x0a, 0x16, 0x4f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0x3e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x22, 0x06, 0x82, 0xf9, 0x2b,
	0x02, 0x08, 0x02, 0x12, 0x77, 0x0a, 0x14, 0x4f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x3c, 0x2e, 0x62, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x0b, 0x12, 0x7b, 0x0a, 0x16,
	0x4f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x3e, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x2e, 0x62, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x22, 0x06, 0x82, 0xf9, 0x2b, 0x02, 0x08, 0x0c, 0x1a, 0x38, 0x82, 0xf9, 0x2b, 0x2e, 0x0a,
	0x2c, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x8a, 0xf9, 0x2b,
	0x02, 0x08, 0x01, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x47, 0x6f, 0x70, 0x68, 0x65, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x62, 0x6e, 0x65, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x67, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31,
}

var (
	file_bgs_low_pb_client_user_manager_service_proto_rawDescOnce sync.Once
	file_bgs_low_pb_client_user_manager_service_proto_rawDescData = file_bgs_low_pb_client_user_manager_service_proto_rawDesc
)

func file_bgs_low_pb_client_user_manager_service_proto_rawDescGZIP() []byte {
	file_bgs_low_pb_client_user_manager_service_proto_rawDescOnce.Do(func() {
		file_bgs_low_pb_client_user_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_bgs_low_pb_client_user_manager_service_proto_rawDescData)
	})
	return file_bgs_low_pb_client_user_manager_service_proto_rawDescData
}

var file_bgs_low_pb_client_user_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bgs_low_pb_client_user_manager_service_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),                 // 0: bgs.protocol.user_manager.v1.SubscribeRequest
	(*SubscribeResponse)(nil),                // 1: bgs.protocol.user_manager.v1.SubscribeResponse
	(*UnsubscribeRequest)(nil),               // 2: bgs.protocol.user_manager.v1.UnsubscribeRequest
	(*AddRecentPlayersRequest)(nil),          // 3: bgs.protocol.user_manager.v1.AddRecentPlayersRequest
	(*ClearRecentPlayersRequest)(nil),        // 4: bgs.protocol.user_manager.v1.ClearRecentPlayersRequest
	(*BlockPlayerRequest)(nil),               // 5: bgs.protocol.user_manager.v1.BlockPlayerRequest
	(*UnblockPlayerRequest)(nil),             // 6: bgs.protocol.user_manager.v1.UnblockPlayerRequest
	(*BlockedPlayerAddedNotification)(nil),   // 7: bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification
	(*BlockedPlayerRemovedNotification)(nil), // 8: bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification
	(*RecentPlayersAddedNotification)(nil),   // 9: bgs.protocol.user_manager.v1.RecentPlayersAddedNotification
	(*RecentPlayersRemovedNotification)(nil), // 10: bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification
	(*protocol.EntityId)(nil),                // 11: bgs.protocol.EntityId
	(*BlockedPlayer)(nil),                    // 12: bgs.protocol.user_manager.v1.BlockedPlayer
	(*RecentPlayer)(nil),                     // 13: bgs.protocol.user_manager.v1.RecentPlayer
	(*protocol.NoData)(nil),                  // 14: bgs.protocol.NoData
	(*protocol.NO_RESPONSE)(nil),             // 15: bgs.protocol.NO_RESPONSE
}
var file_bgs_low_pb_client_user_manager_service_proto_depIdxs = []int32{
	11, // 0: bgs.protocol.user_manager.v1.SubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	12, // 1: bgs.protocol.user_manager.v1.SubscribeResponse.blocked_players:type_name -> bgs.protocol.user_manager.v1.BlockedPlayer
	13, // 2: bgs.protocol.user_manager.v1.SubscribeResponse.recent_players:type_name -> bgs.protocol.user_manager.v1.RecentPlayer
	11, // 3: bgs.protocol.user_manager.v1.UnsubscribeRequest.agent_id:type_name -> bgs.protocol.EntityId
	13, // 4: bgs.protocol.user_manager.v1.AddRecentPlayersRequest.players:type_name -> bgs.protocol.user_manager.v1.RecentPlayer
	11, // 5: bgs.protocol.user_manager.v1.AddRecentPlayersRequest.agent_id:type_name -> bgs.protocol.EntityId
	11, // 6: bgs.protocol.user_manager.v1.ClearRecentPlayersRequest.agent_id:type_name -> bgs.protocol.EntityId
	11, // 7: bgs.protocol.user_manager.v1.BlockPlayerRequest.agent_id:type_name -> bgs.protocol.EntityId
	11, // 8: bgs.protocol.user_manager.v1.BlockPlayerRequest.target_id:type_name -> bgs.protocol.EntityId
	11, // 9: bgs.protocol.user_manager.v1.UnblockPlayerRequest.agent_id:type_name -> bgs.protocol.EntityId
	11, // 10: bgs.protocol.user_manager.v1.UnblockPlayerRequest.target_id:type_name -> bgs.protocol.EntityId
	12, // 11: bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification.player:type_name -> bgs.protocol.user_manager.v1.BlockedPlayer
	11, // 12: bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification.game_account_id:type_name -> bgs.protocol.EntityId
	11, // 13: bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification.account_id:type_name -> bgs.protocol.EntityId
	12, // 14: bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification.player:type_name -> bgs.protocol.user_manager.v1.BlockedPlayer
	11, // 15: bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification.game_account_id:type_name -> bgs.protocol.EntityId
	11, // 16: bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification.account_id:type_name -> bgs.protocol.EntityId
	13, // 17: bgs.protocol.user_manager.v1.RecentPlayersAddedNotification.player:type_name -> bgs.protocol.user_manager.v1.RecentPlayer
	13, // 18: bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification.player:type_name -> bgs.protocol.user_manager.v1.RecentPlayer
	0,  // 19: bgs.protocol.user_manager.v1.UserManagerService.Subscribe:input_type -> bgs.protocol.user_manager.v1.SubscribeRequest
	3,  // 20: bgs.protocol.user_manager.v1.UserManagerService.AddRecentPlayers:input_type -> bgs.protocol.user_manager.v1.AddRecentPlayersRequest
	4,  // 21: bgs.protocol.user_manager.v1.UserManagerService.ClearRecentPlayers:input_type -> bgs.protocol.user_manager.v1.ClearRecentPlayersRequest
	5,  // 22: bgs.protocol.user_manager.v1.UserManagerService.BlockPlayer:input_type -> bgs.protocol.user_manager.v1.BlockPlayerRequest
	6,  // 23: bgs.protocol.user_manager.v1.UserManagerService.UnblockPlayer:input_type -> bgs.protocol.user_manager.v1.UnblockPlayerRequest
	5,  // 24: bgs.protocol.user_manager.v1.UserManagerService.BlockPlayerForSession:input_type -> bgs.protocol.user_manager.v1.BlockPlayerRequest
	2,  // 25: bgs.protocol.user_manager.v1.UserManagerService.Unsubscribe:input_type -> bgs.protocol.user_manager.v1.UnsubscribeRequest
	7,  // 26: bgs.protocol.user_manager.v1.UserManagerListener.OnBlockedPlayerAdded:input_type -> bgs.protocol.user_manager.v1.BlockedPlayerAddedNotification
	8,  // 27: bgs.protocol.user_manager.v1.UserManagerListener.OnBlockedPlayerRemoved:input_type -> bgs.protocol.user_manager.v1.BlockedPlayerRemovedNotification
	9,  // 28: bgs.protocol.user_manager.v1.UserManagerListener.OnRecentPlayersAdded:input_type -> bgs.protocol.user_manager.v1.RecentPlayersAddedNotification
	10, // 29: bgs.protocol.user_manager.v1.UserManagerListener.OnRecentPlayersRemoved:input_type -> bgs.protocol.user_manager.v1.RecentPlayersRemovedNotification
	1,  // 30: bgs.protocol.user_manager.v1.UserManagerService.Subscribe:output_type -> bgs.protocol.user_manager.v1.SubscribeResponse
	14, // 31: bgs.protocol.user_manager.v1.UserManagerService.AddRecentPlayers:output_type -> bgs.protocol.NoData
	14, // 32: bgs.protocol.user_manager.v1.UserManagerService.ClearRecentPlayers:output_type -> bgs.protocol.NoData
	14, // 33: bgs.protocol.user_manager.v1.UserManagerService.BlockPlayer:output_type -> bgs.protocol.NoData
	14, // 34: bgs.protocol.user_manager.v1.UserManagerService.UnblockPlayer:output_type -> bgs.protocol.NoData
	14, // 35: bgs.protocol.user_manager.v1.UserManagerService.BlockPlayerForSession:output_type -> bgs.protocol.NoData
	14, // 36: bgs.protocol.user_manager.v1.UserManagerService.Unsubscribe:output_type -> bgs.protocol.NoData
	15, // 37: bgs.protocol.user_manager.v1.UserManagerListener.OnBlockedPlayerAdded:output_type -> bgs.protocol.NO_RESPONSE
	15, // 38: bgs.protocol.user_manager.v1.UserManagerListener.OnBlockedPlayerRemoved:output_type -> bgs.protocol.NO_RESPONSE
	15, // 39: bgs.protocol.user_manager.v1.UserManagerListener.OnRecentPlayersAdded:output_type -> bgs.protocol.NO_RESPONSE
	15, // 40: bgs.protocol.user_manager.v1.UserManagerListener.OnRecentPlayersRemoved:output_type -> bgs.protocol.NO_RESPONSE
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_bgs_low_pb_client_user_manager_service_proto_init() }
func file_bgs_low_pb_client_user_manager_service_proto_init() {
	if File_bgs_low_pb_client_user_manager_service_proto != nil {
		return
	}
	file_bgs_low_pb_client_user_manager_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRecentPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRecentPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnblockPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockedPlayerAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockedPlayerRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentPlayersAddedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bgs_low_pb_client_user_manager_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecentPlayersRemovedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bgs_low_pb_client_user_manager_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_bgs_low_pb_client_user_manager_service_proto_goTypes,
		DependencyIndexes: file_bgs_low_pb_client_user_manager_service_proto_depIdxs,
		MessageInfos:      file_bgs_low_pb_client_user_manager_service_proto_msgTypes,
	}.Build()
	File_bgs_low_pb_client_user_manager_service_proto = out.File
	file_bgs_low_pb_client_user_manager_service_proto_rawDesc = nil
	file_bgs_low_pb_client_user_manager_service_proto_goTypes = nil
	file_bgs_low_pb_client_user_manager_service_proto_depIdxs = nil
}
