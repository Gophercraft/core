// DO NOT EDIT: this file was auto-generated by Gophercraft/protoss

// Code generated by protoc-gen-go-bnet. DO NOT EDIT.
// versions:
// - protoc-gen-go-bnet v1.3.0
// - protoc             v4.25.2
// source: bgs/low/pb/client/game_utilities_service.proto

package v1

import (
	context "context"
	protocol "github.com/Gophercraft/core/bnet/pb/bgs/protocol"
	rpc "github.com/Gophercraft/core/bnet/rpc"
	codes "github.com/Gophercraft/core/bnet/rpc/codes"
	status "github.com/Gophercraft/core/bnet/rpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the bnet package it is being compiled against.
const _ = rpc.SupportPackageIsVersion1

const (
	GameUtilitiesService_ProcessClientRequest_FullMethodName     = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/ProcessClientRequest"
	GameUtilitiesService_PresenceChannelCreated_FullMethodName   = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/PresenceChannelCreated"
	GameUtilitiesService_ProcessServerRequest_FullMethodName     = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/ProcessServerRequest"
	GameUtilitiesService_OnGameAccountOnline_FullMethodName      = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/OnGameAccountOnline"
	GameUtilitiesService_OnGameAccountOffline_FullMethodName     = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/OnGameAccountOffline"
	GameUtilitiesService_GetAllValuesForAttribute_FullMethodName = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/GetAllValuesForAttribute"
	GameUtilitiesService_RegisterUtilities_FullMethodName        = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/RegisterUtilities"
	GameUtilitiesService_UnregisterUtilities_FullMethodName      = "/bgs.protocol.game_utilities.v1.GameUtilitiesService/UnregisterUtilities"
)

// GameUtilitiesServiceClient is the client API for GameUtilitiesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GameUtilitiesServiceClient interface {
	ProcessClientRequest(ctx context.Context, in *ClientRequest, opts ...rpc.CallOption) (*ClientResponse, error)
	PresenceChannelCreated(ctx context.Context, in *PresenceChannelCreatedRequest, opts ...rpc.CallOption) (*protocol.NoData, error)
	ProcessServerRequest(ctx context.Context, in *ServerRequest, opts ...rpc.CallOption) (*ServerResponse, error)
	OnGameAccountOnline(ctx context.Context, in *GameAccountOnlineNotification, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error)
	OnGameAccountOffline(ctx context.Context, in *GameAccountOfflineNotification, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error)
	GetAllValuesForAttribute(ctx context.Context, in *GetAllValuesForAttributeRequest, opts ...rpc.CallOption) (*GetAllValuesForAttributeResponse, error)
	RegisterUtilities(ctx context.Context, in *RegisterUtilitiesRequest, opts ...rpc.CallOption) (*RegisterUtilitiesResponse, error)
	UnregisterUtilities(ctx context.Context, in *UnregisterUtilitiesRequest, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error)
}

type gameUtilitiesServiceClient struct {
	cc rpc.ClientConnectionInterface
}

func NewGameUtilitiesServiceClient(cc rpc.ClientConnectionInterface) GameUtilitiesServiceClient {
	return &gameUtilitiesServiceClient{cc}
}

func (c *gameUtilitiesServiceClient) ProcessClientRequest(ctx context.Context, in *ClientRequest, opts ...rpc.CallOption) (*ClientResponse, error) {
	out := new(ClientResponse)
	err := c.cc.Invoke(ctx, GameUtilitiesService_ProcessClientRequest_FullMethodName, 0x3FC1274D, 1, true, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) PresenceChannelCreated(ctx context.Context, in *PresenceChannelCreatedRequest, opts ...rpc.CallOption) (*protocol.NoData, error) {
	out := new(protocol.NoData)
	err := c.cc.Invoke(ctx, GameUtilitiesService_PresenceChannelCreated_FullMethodName, 0x3FC1274D, 2, true, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) ProcessServerRequest(ctx context.Context, in *ServerRequest, opts ...rpc.CallOption) (*ServerResponse, error) {
	out := new(ServerResponse)
	err := c.cc.Invoke(ctx, GameUtilitiesService_ProcessServerRequest_FullMethodName, 0x3FC1274D, 6, true, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) OnGameAccountOnline(ctx context.Context, in *GameAccountOnlineNotification, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error) {
	out := new(protocol.NO_RESPONSE)
	err := c.cc.Invoke(ctx, GameUtilitiesService_OnGameAccountOnline_FullMethodName, 0x3FC1274D, 7, false, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) OnGameAccountOffline(ctx context.Context, in *GameAccountOfflineNotification, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error) {
	out := new(protocol.NO_RESPONSE)
	err := c.cc.Invoke(ctx, GameUtilitiesService_OnGameAccountOffline_FullMethodName, 0x3FC1274D, 8, false, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) GetAllValuesForAttribute(ctx context.Context, in *GetAllValuesForAttributeRequest, opts ...rpc.CallOption) (*GetAllValuesForAttributeResponse, error) {
	out := new(GetAllValuesForAttributeResponse)
	err := c.cc.Invoke(ctx, GameUtilitiesService_GetAllValuesForAttribute_FullMethodName, 0x3FC1274D, 10, true, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) RegisterUtilities(ctx context.Context, in *RegisterUtilitiesRequest, opts ...rpc.CallOption) (*RegisterUtilitiesResponse, error) {
	out := new(RegisterUtilitiesResponse)
	err := c.cc.Invoke(ctx, GameUtilitiesService_RegisterUtilities_FullMethodName, 0x3FC1274D, 11, true, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameUtilitiesServiceClient) UnregisterUtilities(ctx context.Context, in *UnregisterUtilitiesRequest, opts ...rpc.CallOption) (*protocol.NO_RESPONSE, error) {
	out := new(protocol.NO_RESPONSE)
	err := c.cc.Invoke(ctx, GameUtilitiesService_UnregisterUtilities_FullMethodName, 0x3FC1274D, 12, false, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameUtilitiesServiceServer is the server API for GameUtilitiesService service.
// All implementations must embed UnimplementedGameUtilitiesServiceServer
// for forward compatibility
type GameUtilitiesServiceServer interface {
	ProcessClientRequest(context.Context, *ClientRequest) (*ClientResponse, error)
	PresenceChannelCreated(context.Context, *PresenceChannelCreatedRequest) (*protocol.NoData, error)
	ProcessServerRequest(context.Context, *ServerRequest) (*ServerResponse, error)
	OnGameAccountOnline(context.Context, *GameAccountOnlineNotification) (*protocol.NO_RESPONSE, error)
	OnGameAccountOffline(context.Context, *GameAccountOfflineNotification) (*protocol.NO_RESPONSE, error)
	GetAllValuesForAttribute(context.Context, *GetAllValuesForAttributeRequest) (*GetAllValuesForAttributeResponse, error)
	RegisterUtilities(context.Context, *RegisterUtilitiesRequest) (*RegisterUtilitiesResponse, error)
	UnregisterUtilities(context.Context, *UnregisterUtilitiesRequest) (*protocol.NO_RESPONSE, error)
	mustEmbedUnimplementedGameUtilitiesServiceServer()
}

// UnimplementedGameUtilitiesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGameUtilitiesServiceServer struct {
}

func (UnimplementedGameUtilitiesServiceServer) ProcessClientRequest(context.Context, *ClientRequest) (*ClientResponse, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method ProcessClientRequest not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) PresenceChannelCreated(context.Context, *PresenceChannelCreatedRequest) (*protocol.NoData, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method PresenceChannelCreated not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) ProcessServerRequest(context.Context, *ServerRequest) (*ServerResponse, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method ProcessServerRequest not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) OnGameAccountOnline(context.Context, *GameAccountOnlineNotification) (*protocol.NO_RESPONSE, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method OnGameAccountOnline not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) OnGameAccountOffline(context.Context, *GameAccountOfflineNotification) (*protocol.NO_RESPONSE, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method OnGameAccountOffline not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) GetAllValuesForAttribute(context.Context, *GetAllValuesForAttributeRequest) (*GetAllValuesForAttributeResponse, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method GetAllValuesForAttribute not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) RegisterUtilities(context.Context, *RegisterUtilitiesRequest) (*RegisterUtilitiesResponse, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method RegisterUtilities not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) UnregisterUtilities(context.Context, *UnregisterUtilitiesRequest) (*protocol.NO_RESPONSE, error) {
	return nil, status.Errorf(codes.ERROR_RPC_NOT_IMPLEMENTED, "method UnregisterUtilities not implemented")
}
func (UnimplementedGameUtilitiesServiceServer) mustEmbedUnimplementedGameUtilitiesServiceServer() {}

// UnsafeGameUtilitiesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GameUtilitiesServiceServer will
// result in compilation errors.
type UnsafeGameUtilitiesServiceServer interface {
	mustEmbedUnimplementedGameUtilitiesServiceServer()
}

func RegisterGameUtilitiesServiceServer(s rpc.ServiceRegistrar, srv GameUtilitiesServiceServer) {
	s.RegisterService(&GameUtilitiesService_ServiceDesc, srv)
}

func _GameUtilitiesService_ProcessClientRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).ProcessClientRequest(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_ProcessClientRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).ProcessClientRequest(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_PresenceChannelCreated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresenceChannelCreatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).PresenceChannelCreated(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_PresenceChannelCreated_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).PresenceChannelCreated(ctx, req.(*PresenceChannelCreatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_ProcessServerRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).ProcessServerRequest(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_ProcessServerRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).ProcessServerRequest(ctx, req.(*ServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_OnGameAccountOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameAccountOnlineNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).OnGameAccountOnline(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_OnGameAccountOnline_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).OnGameAccountOnline(ctx, req.(*GameAccountOnlineNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_OnGameAccountOffline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameAccountOfflineNotification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).OnGameAccountOffline(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_OnGameAccountOffline_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).OnGameAccountOffline(ctx, req.(*GameAccountOfflineNotification))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_GetAllValuesForAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllValuesForAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).GetAllValuesForAttribute(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_GetAllValuesForAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).GetAllValuesForAttribute(ctx, req.(*GetAllValuesForAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_RegisterUtilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUtilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).RegisterUtilities(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_RegisterUtilities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).RegisterUtilities(ctx, req.(*RegisterUtilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameUtilitiesService_UnregisterUtilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor rpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterUtilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameUtilitiesServiceServer).UnregisterUtilities(ctx, in)
	}
	info := &rpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GameUtilitiesService_UnregisterUtilities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameUtilitiesServiceServer).UnregisterUtilities(ctx, req.(*UnregisterUtilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GameUtilitiesService_ServiceDesc is the rpc.ServiceDesc for GameUtilitiesService service.
// It's only intended for direct use with rpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GameUtilitiesService_ServiceDesc = rpc.ServiceDesc{
	ServiceHash: 0x3FC1274D,
	ServiceName: "bgs.protocol.game_utilities.v1.GameUtilitiesService",
	HandlerType: (*GameUtilitiesServiceServer)(nil),
	Methods: []rpc.MethodDesc{
		{
			MethodName: "ProcessClientRequest",
			MethodId:   1,
			NoResponse: false,
			Handler:    _GameUtilitiesService_ProcessClientRequest_Handler,
		},
		{
			MethodName: "PresenceChannelCreated",
			MethodId:   2,
			NoResponse: false,
			Handler:    _GameUtilitiesService_PresenceChannelCreated_Handler,
		},
		{
			MethodName: "ProcessServerRequest",
			MethodId:   6,
			NoResponse: false,
			Handler:    _GameUtilitiesService_ProcessServerRequest_Handler,
		},
		{
			MethodName: "OnGameAccountOnline",
			MethodId:   7,
			NoResponse: true,
			Handler:    _GameUtilitiesService_OnGameAccountOnline_Handler,
		},
		{
			MethodName: "OnGameAccountOffline",
			MethodId:   8,
			NoResponse: true,
			Handler:    _GameUtilitiesService_OnGameAccountOffline_Handler,
		},
		{
			MethodName: "GetAllValuesForAttribute",
			MethodId:   10,
			NoResponse: false,
			Handler:    _GameUtilitiesService_GetAllValuesForAttribute_Handler,
		},
		{
			MethodName: "RegisterUtilities",
			MethodId:   11,
			NoResponse: false,
			Handler:    _GameUtilitiesService_RegisterUtilities_Handler,
		},
		{
			MethodName: "UnregisterUtilities",
			MethodId:   12,
			NoResponse: true,
			Handler:    _GameUtilitiesService_UnregisterUtilities_Handler,
		},
	},
	Metadata: "bgs/low/pb/client/game_utilities_service.proto",
}
