// generated by protoc-gen-gcraft : DO NOT EDIT
package bnet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protocol "github.com/Gophercraft/core/bnet/bgs/protocol"
	v1 "github.com/Gophercraft/core/bnet/bgs/protocol/user_manager/v1"
	math "math"
)

// shut the compiler up
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = protocol.E_MethodOptions

const UserManagerListenerHash = 0xBC872C22

type UserManagerListener interface {
	OnBlockedPlayerAdded(*Conn, uint32, *v1.BlockedPlayerAddedNotification)
	OnBlockedPlayerRemoved(*Conn, uint32, *v1.BlockedPlayerRemovedNotification)
	OnRecentPlayersAdded(*Conn, uint32, *v1.RecentPlayersAddedNotification)
	OnRecentPlayersRemoved(*Conn, uint32, *v1.RecentPlayersRemovedNotification)
}

func DispatchUserManagerListener(conn *Conn, svc UserManagerListener, token uint32, method uint32, data []byte) error {
	switch method {
	case 1:
		var args v1.BlockedPlayerAddedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnBlockedPlayerAdded(conn, token, &args)
	case 2:
		var args v1.BlockedPlayerRemovedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnBlockedPlayerRemoved(conn, token, &args)
	case 11:
		var args v1.RecentPlayersAddedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnRecentPlayersAdded(conn, token, &args)
	case 12:
		var args v1.RecentPlayersRemovedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnRecentPlayersRemoved(conn, token, &args)
	}
	return nil
}

type EmptyUserManagerListener struct{}

func (e EmptyUserManagerListener) OnBlockedPlayerAdded(conn *Conn, token uint32, args *v1.BlockedPlayerAddedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyUserManagerListener) OnBlockedPlayerRemoved(conn *Conn, token uint32, args *v1.BlockedPlayerRemovedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyUserManagerListener) OnRecentPlayersAdded(conn *Conn, token uint32, args *v1.RecentPlayersAddedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyUserManagerListener) OnRecentPlayersRemoved(conn *Conn, token uint32, args *v1.RecentPlayersRemovedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}

func (c *Conn) UserManagerListener_Request_OnBlockedPlayerAdded(args *v1.BlockedPlayerAddedNotification) error {
	header, _, err := c.Request(UserManagerListenerHash, 1, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) UserManagerListener_Request_OnBlockedPlayerRemoved(args *v1.BlockedPlayerRemovedNotification) error {
	header, _, err := c.Request(UserManagerListenerHash, 2, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) UserManagerListener_Request_OnRecentPlayersAdded(args *v1.RecentPlayersAddedNotification) error {
	header, _, err := c.Request(UserManagerListenerHash, 11, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) UserManagerListener_Request_OnRecentPlayersRemoved(args *v1.RecentPlayersRemovedNotification) error {
	header, _, err := c.Request(UserManagerListenerHash, 12, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}
