// Code generated by protoc-gen-gcraft. DO NOT EDIT.
// source: role_types.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Role struct {
	Id                   *uint32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Privilege            []string `protobuf:"bytes,3,rep,name=privilege" json:"privilege,omitempty"`
	AssignableRole       []uint32 `protobuf:"varint,4,rep,packed,name=assignable_role,json=assignableRole" json:"assignable_role,omitempty"`
	Required             *bool    `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	Unique               *bool    `protobuf:"varint,6,opt,name=unique" json:"unique,omitempty"`
	RelegationRole       *uint32  `protobuf:"varint,7,opt,name=relegation_role,json=relegationRole" json:"relegation_role,omitempty"`
	KickableRole         []uint32 `protobuf:"varint,9,rep,packed,name=kickable_role,json=kickableRole" json:"kickable_role,omitempty"`
	RemovableRole        []uint32 `protobuf:"varint,10,rep,packed,name=removable_role,json=removableRole" json:"removable_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f3018fee1c1a2, []int{0}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Role) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Role) GetPrivilege() []string {
	if m != nil {
		return m.Privilege
	}
	return nil
}

func (m *Role) GetAssignableRole() []uint32 {
	if m != nil {
		return m.AssignableRole
	}
	return nil
}

func (m *Role) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return false
}

func (m *Role) GetUnique() bool {
	if m != nil && m.Unique != nil {
		return *m.Unique
	}
	return false
}

func (m *Role) GetRelegationRole() uint32 {
	if m != nil && m.RelegationRole != nil {
		return *m.RelegationRole
	}
	return 0
}

func (m *Role) GetKickableRole() []uint32 {
	if m != nil {
		return m.KickableRole
	}
	return nil
}

func (m *Role) GetRemovableRole() []uint32 {
	if m != nil {
		return m.RemovableRole
	}
	return nil
}

type RoleState struct {
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AssignableRole       []uint32 `protobuf:"varint,4,rep,packed,name=assignable_role,json=assignableRole" json:"assignable_role,omitempty"`
	Required             *bool    `protobuf:"varint,5,opt,name=required" json:"required,omitempty"`
	Unique               *bool    `protobuf:"varint,6,opt,name=unique" json:"unique,omitempty"`
	RelegationRole       *uint32  `protobuf:"varint,7,opt,name=relegation_role,json=relegationRole" json:"relegation_role,omitempty"`
	KickableRole         []uint32 `protobuf:"varint,9,rep,packed,name=kickable_role,json=kickableRole" json:"kickable_role,omitempty"`
	RemovableRole        []uint32 `protobuf:"varint,10,rep,packed,name=removable_role,json=removableRole" json:"removable_role,omitempty"`
	MentionableRole      []uint32 `protobuf:"varint,11,rep,packed,name=mentionable_role,json=mentionableRole" json:"mentionable_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleState) Reset()         { *m = RoleState{} }
func (m *RoleState) String() string { return proto.CompactTextString(m) }
func (*RoleState) ProtoMessage()    {}
func (*RoleState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e67f3018fee1c1a2, []int{1}
}

func (m *RoleState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleState.Unmarshal(m, b)
}
func (m *RoleState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleState.Marshal(b, m, deterministic)
}
func (m *RoleState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleState.Merge(m, src)
}
func (m *RoleState) XXX_Size() int {
	return xxx_messageInfo_RoleState.Size(m)
}
func (m *RoleState) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleState.DiscardUnknown(m)
}

var xxx_messageInfo_RoleState proto.InternalMessageInfo

func (m *RoleState) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RoleState) GetAssignableRole() []uint32 {
	if m != nil {
		return m.AssignableRole
	}
	return nil
}

func (m *RoleState) GetRequired() bool {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return false
}

func (m *RoleState) GetUnique() bool {
	if m != nil && m.Unique != nil {
		return *m.Unique
	}
	return false
}

func (m *RoleState) GetRelegationRole() uint32 {
	if m != nil && m.RelegationRole != nil {
		return *m.RelegationRole
	}
	return 0
}

func (m *RoleState) GetKickableRole() []uint32 {
	if m != nil {
		return m.KickableRole
	}
	return nil
}

func (m *RoleState) GetRemovableRole() []uint32 {
	if m != nil {
		return m.RemovableRole
	}
	return nil
}

func (m *RoleState) GetMentionableRole() []uint32 {
	if m != nil {
		return m.MentionableRole
	}
	return nil
}

func init() {
	proto.RegisterType((*Role)(nil), "bgs.protocol.Role")
	proto.RegisterType((*RoleState)(nil), "bgs.protocol.RoleState")
}

func init() { proto.RegisterFile("role_types.proto", fileDescriptor_e67f3018fee1c1a2) }

var fileDescriptor_e67f3018fee1c1a2 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x92, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0xb7, 0x94, 0x66, 0x68, 0xd2, 0xca, 0x0b, 0x14, 0x21, 0x16, 0x51, 0x37, 0x0d,
	0x42, 0x34, 0x15, 0xe2, 0x04, 0x3d, 0x82, 0xd9, 0xb1, 0xa9, 0xf2, 0x33, 0xb8, 0x56, 0x93, 0xd8,
	0x75, 0x9c, 0x4a, 0x5c, 0x88, 0x15, 0x87, 0x44, 0x09, 0xad, 0xdd, 0x33, 0xb0, 0x7b, 0x33, 0xef,
	0x93, 0xdf, 0x78, 0x34, 0xb0, 0xd0, 0xb2, 0xc2, 0x9d, 0xf9, 0x52, 0xd8, 0xae, 0x95, 0x96, 0x46,
	0xd2, 0x59, 0xce, 0xcf, 0xb2, 0x90, 0xd5, 0xf2, 0x9b, 0xc0, 0x98, 0xc9, 0x0a, 0x69, 0x08, 0x44,
	0x94, 0x91, 0x17, 0x93, 0x24, 0x60, 0x44, 0x94, 0x94, 0xc2, 0xb8, 0xc9, 0x6a, 0x8c, 0x48, 0x4c,
	0x12, 0x9f, 0x0d, 0x9a, 0x3e, 0x82, 0xaf, 0xb4, 0x38, 0x89, 0x0a, 0x39, 0x46, 0xa3, 0x78, 0x94,
	0xf8, 0xcc, 0x35, 0xe8, 0x33, 0xcc, 0xb3, 0xb6, 0x15, 0xbc, 0xc9, 0xf2, 0x0a, 0x77, 0x7d, 0x6e,
	0x34, 0x8e, 0x47, 0x49, 0xb0, 0x25, 0x0b, 0x8f, 0x85, 0xce, 0x1a, 0xe2, 0x1e, 0x60, 0xaa, 0xf1,
	0xd8, 0x09, 0x8d, 0x65, 0x74, 0x13, 0x7b, 0xc9, 0x94, 0xd9, 0x9a, 0xde, 0xc3, 0xa4, 0x6b, 0xc4,
	0xb1, 0xc3, 0x68, 0x32, 0x38, 0xe7, 0x8a, 0xae, 0x60, 0xae, 0xb1, 0x42, 0x9e, 0x19, 0x21, 0x9b,
	0xbf, 0x80, 0xdb, 0xd8, 0x4b, 0x02, 0x16, 0xba, 0xf6, 0xf0, 0xf8, 0x0a, 0x82, 0x83, 0x28, 0x0e,
	0x6e, 0x0e, 0xdf, 0xce, 0x31, 0xbb, 0x18, 0x03, 0xf8, 0x04, 0xa1, 0xc6, 0x5a, 0x9e, 0x1c, 0x09,
	0x96, 0x0c, 0xac, 0xd3, 0xa3, 0xcb, 0x1f, 0x02, 0x7e, 0x2f, 0xde, 0x4d, 0x66, 0xf0, 0x6a, 0x3b,
	0x9e, 0xdd, 0xce, 0xbf, 0xfe, 0x3f, 0x7d, 0x81, 0x45, 0x8d, 0x4d, 0x1f, 0xe1, 0xe0, 0x3b, 0x0b,
	0xcf, 0xaf, 0xbc, 0x1e, 0xdf, 0xbe, 0x7d, 0xbc, 0x72, 0x61, 0xf6, 0x5d, 0xbe, 0x2e, 0x64, 0x9d,
	0xb6, 0x9d, 0x42, 0xad, 0x36, 0x1b, 0x93, 0x72, 0xa9, 0xf6, 0xa8, 0x0b, 0x9d, 0x7d, 0x9a, 0x34,
	0x6f, 0xd0, 0xa4, 0x39, 0x6f, 0xd3, 0xcb, 0x35, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x3b,
	0x7c, 0x9a, 0xae, 0x02, 0x00, 0x00,
}
