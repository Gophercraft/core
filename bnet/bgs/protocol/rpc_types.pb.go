// Code generated by protoc-gen-gcraft. DO NOT EDIT.
// source: rpc_types.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NO_RESPONSE struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NO_RESPONSE) Reset()         { *m = NO_RESPONSE{} }
func (m *NO_RESPONSE) String() string { return proto.CompactTextString(m) }
func (*NO_RESPONSE) ProtoMessage()    {}
func (*NO_RESPONSE) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{0}
}

func (m *NO_RESPONSE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NO_RESPONSE.Unmarshal(m, b)
}
func (m *NO_RESPONSE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NO_RESPONSE.Marshal(b, m, deterministic)
}
func (m *NO_RESPONSE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NO_RESPONSE.Merge(m, src)
}
func (m *NO_RESPONSE) XXX_Size() int {
	return xxx_messageInfo_NO_RESPONSE.Size(m)
}
func (m *NO_RESPONSE) XXX_DiscardUnknown() {
	xxx_messageInfo_NO_RESPONSE.DiscardUnknown(m)
}

var xxx_messageInfo_NO_RESPONSE proto.InternalMessageInfo

type Address struct {
	Address              *string  `protobuf:"bytes,1,req,name=address" json:"address,omitempty"`
	Port                 *uint32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{1}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Address) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type ProcessId struct {
	Label                *uint32  `protobuf:"varint,1,req,name=label" json:"label,omitempty"`
	Epoch                *uint32  `protobuf:"varint,2,req,name=epoch" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessId) Reset()         { *m = ProcessId{} }
func (m *ProcessId) String() string { return proto.CompactTextString(m) }
func (*ProcessId) ProtoMessage()    {}
func (*ProcessId) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{2}
}

func (m *ProcessId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessId.Unmarshal(m, b)
}
func (m *ProcessId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessId.Marshal(b, m, deterministic)
}
func (m *ProcessId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessId.Merge(m, src)
}
func (m *ProcessId) XXX_Size() int {
	return xxx_messageInfo_ProcessId.Size(m)
}
func (m *ProcessId) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessId.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessId proto.InternalMessageInfo

func (m *ProcessId) GetLabel() uint32 {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return 0
}

func (m *ProcessId) GetEpoch() uint32 {
	if m != nil && m.Epoch != nil {
		return *m.Epoch
	}
	return 0
}

type ObjectAddress struct {
	Host                 *ProcessId `protobuf:"bytes,1,req,name=host" json:"host,omitempty"`
	ObjectId             *uint64    `protobuf:"varint,2,opt,name=object_id,json=objectId,def=0" json:"object_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ObjectAddress) Reset()         { *m = ObjectAddress{} }
func (m *ObjectAddress) String() string { return proto.CompactTextString(m) }
func (*ObjectAddress) ProtoMessage()    {}
func (*ObjectAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{3}
}

func (m *ObjectAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectAddress.Unmarshal(m, b)
}
func (m *ObjectAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectAddress.Marshal(b, m, deterministic)
}
func (m *ObjectAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectAddress.Merge(m, src)
}
func (m *ObjectAddress) XXX_Size() int {
	return xxx_messageInfo_ObjectAddress.Size(m)
}
func (m *ObjectAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectAddress.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectAddress proto.InternalMessageInfo

const Default_ObjectAddress_ObjectId uint64 = 0

func (m *ObjectAddress) GetHost() *ProcessId {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *ObjectAddress) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_ObjectAddress_ObjectId
}

type NoData struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoData) Reset()         { *m = NoData{} }
func (m *NoData) String() string { return proto.CompactTextString(m) }
func (*NoData) ProtoMessage()    {}
func (*NoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{4}
}

func (m *NoData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoData.Unmarshal(m, b)
}
func (m *NoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoData.Marshal(b, m, deterministic)
}
func (m *NoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoData.Merge(m, src)
}
func (m *NoData) XXX_Size() int {
	return xxx_messageInfo_NoData.Size(m)
}
func (m *NoData) XXX_DiscardUnknown() {
	xxx_messageInfo_NoData.DiscardUnknown(m)
}

var xxx_messageInfo_NoData proto.InternalMessageInfo

type ErrorInfo struct {
	ObjectAddress        *ObjectAddress `protobuf:"bytes,1,req,name=object_address,json=objectAddress" json:"object_address,omitempty"`
	Status               *uint32        `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	ServiceHash          *uint32        `protobuf:"varint,3,req,name=service_hash,json=serviceHash" json:"service_hash,omitempty"`
	MethodId             *uint32        `protobuf:"varint,4,req,name=method_id,json=methodId" json:"method_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ErrorInfo) Reset()         { *m = ErrorInfo{} }
func (m *ErrorInfo) String() string { return proto.CompactTextString(m) }
func (*ErrorInfo) ProtoMessage()    {}
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{5}
}

func (m *ErrorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorInfo.Unmarshal(m, b)
}
func (m *ErrorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorInfo.Marshal(b, m, deterministic)
}
func (m *ErrorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorInfo.Merge(m, src)
}
func (m *ErrorInfo) XXX_Size() int {
	return xxx_messageInfo_ErrorInfo.Size(m)
}
func (m *ErrorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorInfo proto.InternalMessageInfo

func (m *ErrorInfo) GetObjectAddress() *ObjectAddress {
	if m != nil {
		return m.ObjectAddress
	}
	return nil
}

func (m *ErrorInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ErrorInfo) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *ErrorInfo) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

type FanoutTarget struct {
	ClientId             *string  `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	ObjectId             *uint64  `protobuf:"varint,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FanoutTarget) Reset()         { *m = FanoutTarget{} }
func (m *FanoutTarget) String() string { return proto.CompactTextString(m) }
func (*FanoutTarget) ProtoMessage()    {}
func (*FanoutTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{6}
}

func (m *FanoutTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FanoutTarget.Unmarshal(m, b)
}
func (m *FanoutTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FanoutTarget.Marshal(b, m, deterministic)
}
func (m *FanoutTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FanoutTarget.Merge(m, src)
}
func (m *FanoutTarget) XXX_Size() int {
	return xxx_messageInfo_FanoutTarget.Size(m)
}
func (m *FanoutTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_FanoutTarget.DiscardUnknown(m)
}

var xxx_messageInfo_FanoutTarget proto.InternalMessageInfo

func (m *FanoutTarget) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *FanoutTarget) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *FanoutTarget) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return 0
}

type Header struct {
	ServiceId            *uint32         `protobuf:"varint,1,req,name=service_id,json=serviceId" json:"service_id,omitempty"`
	MethodId             *uint32         `protobuf:"varint,2,opt,name=method_id,json=methodId" json:"method_id,omitempty"`
	Token                *uint32         `protobuf:"varint,3,req,name=token" json:"token,omitempty"`
	ObjectId             *uint64         `protobuf:"varint,4,opt,name=object_id,json=objectId,def=0" json:"object_id,omitempty"`
	Size                 *uint32         `protobuf:"varint,5,opt,name=size,def=0" json:"size,omitempty"`
	Status               *uint32         `protobuf:"varint,6,opt,name=status,def=0" json:"status,omitempty"`
	Error                []*ErrorInfo    `protobuf:"bytes,7,rep,name=error" json:"error,omitempty"`
	Timeout              *uint64         `protobuf:"varint,8,opt,name=timeout" json:"timeout,omitempty"`
	IsResponse           *bool           `protobuf:"varint,9,opt,name=is_response,json=isResponse" json:"is_response,omitempty"`
	ForwardTargets       []*ProcessId    `protobuf:"bytes,10,rep,name=forward_targets,json=forwardTargets" json:"forward_targets,omitempty"`
	ServiceHash          *uint32         `protobuf:"fixed32,11,opt,name=service_hash,json=serviceHash" json:"service_hash,omitempty"`
	ClientId             *string         `protobuf:"bytes,13,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FanoutTarget         []*FanoutTarget `protobuf:"bytes,14,rep,name=fanout_target,json=fanoutTarget" json:"fanout_target,omitempty"`
	ClientIdFanoutTarget []string        `protobuf:"bytes,15,rep,name=client_id_fanout_target,json=clientIdFanoutTarget" json:"client_id_fanout_target,omitempty"`
	ClientRecord         []byte          `protobuf:"bytes,16,opt,name=client_record,json=clientRecord" json:"client_record,omitempty"`
	OriginalSender       []byte          `protobuf:"bytes,17,opt,name=original_sender,json=originalSender" json:"original_sender,omitempty"`
	SenderToken          *uint32         `protobuf:"varint,18,opt,name=sender_token,json=senderToken" json:"sender_token,omitempty"`
	RouterLabel          *uint32         `protobuf:"varint,19,opt,name=router_label,json=routerLabel" json:"router_label,omitempty"`
	ErrorReason          *string         `protobuf:"bytes,20,opt,name=error_reason,json=errorReason" json:"error_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{7}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

const Default_Header_ObjectId uint64 = 0
const Default_Header_Size uint32 = 0
const Default_Header_Status uint32 = 0

func (m *Header) GetServiceId() uint32 {
	if m != nil && m.ServiceId != nil {
		return *m.ServiceId
	}
	return 0
}

func (m *Header) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

func (m *Header) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *Header) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_Header_ObjectId
}

func (m *Header) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return Default_Header_Size
}

func (m *Header) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_Header_Status
}

func (m *Header) GetError() []*ErrorInfo {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Header) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *Header) GetIsResponse() bool {
	if m != nil && m.IsResponse != nil {
		return *m.IsResponse
	}
	return false
}

func (m *Header) GetForwardTargets() []*ProcessId {
	if m != nil {
		return m.ForwardTargets
	}
	return nil
}

func (m *Header) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *Header) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *Header) GetFanoutTarget() []*FanoutTarget {
	if m != nil {
		return m.FanoutTarget
	}
	return nil
}

func (m *Header) GetClientIdFanoutTarget() []string {
	if m != nil {
		return m.ClientIdFanoutTarget
	}
	return nil
}

func (m *Header) GetClientRecord() []byte {
	if m != nil {
		return m.ClientRecord
	}
	return nil
}

func (m *Header) GetOriginalSender() []byte {
	if m != nil {
		return m.OriginalSender
	}
	return nil
}

func (m *Header) GetSenderToken() uint32 {
	if m != nil && m.SenderToken != nil {
		return *m.SenderToken
	}
	return 0
}

func (m *Header) GetRouterLabel() uint32 {
	if m != nil && m.RouterLabel != nil {
		return *m.RouterLabel
	}
	return 0
}

func (m *Header) GetErrorReason() string {
	if m != nil && m.ErrorReason != nil {
		return *m.ErrorReason
	}
	return ""
}

type KafkaHeader struct {
	ServiceHash          *uint32    `protobuf:"fixed32,1,opt,name=service_hash,json=serviceHash" json:"service_hash,omitempty"`
	MethodId             *uint32    `protobuf:"varint,2,opt,name=method_id,json=methodId" json:"method_id,omitempty"`
	Token                *uint32    `protobuf:"varint,3,opt,name=token" json:"token,omitempty"`
	ObjectId             *uint64    `protobuf:"varint,4,opt,name=object_id,json=objectId,def=0" json:"object_id,omitempty"`
	Size                 *uint32    `protobuf:"varint,5,opt,name=size,def=0" json:"size,omitempty"`
	Status               *uint32    `protobuf:"varint,6,opt,name=status,def=0" json:"status,omitempty"`
	Timeout              *uint64    `protobuf:"varint,7,opt,name=timeout" json:"timeout,omitempty"`
	ForwardTarget        *ProcessId `protobuf:"bytes,8,opt,name=forward_target,json=forwardTarget" json:"forward_target,omitempty"`
	ReturnTopic          *string    `protobuf:"bytes,9,opt,name=return_topic,json=returnTopic" json:"return_topic,omitempty"`
	ClientId             *string    `protobuf:"bytes,11,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KafkaHeader) Reset()         { *m = KafkaHeader{} }
func (m *KafkaHeader) String() string { return proto.CompactTextString(m) }
func (*KafkaHeader) ProtoMessage()    {}
func (*KafkaHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_333001bce00ed081, []int{8}
}

func (m *KafkaHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KafkaHeader.Unmarshal(m, b)
}
func (m *KafkaHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KafkaHeader.Marshal(b, m, deterministic)
}
func (m *KafkaHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KafkaHeader.Merge(m, src)
}
func (m *KafkaHeader) XXX_Size() int {
	return xxx_messageInfo_KafkaHeader.Size(m)
}
func (m *KafkaHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_KafkaHeader.DiscardUnknown(m)
}

var xxx_messageInfo_KafkaHeader proto.InternalMessageInfo

const Default_KafkaHeader_ObjectId uint64 = 0
const Default_KafkaHeader_Size uint32 = 0
const Default_KafkaHeader_Status uint32 = 0

func (m *KafkaHeader) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *KafkaHeader) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

func (m *KafkaHeader) GetToken() uint32 {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return 0
}

func (m *KafkaHeader) GetObjectId() uint64 {
	if m != nil && m.ObjectId != nil {
		return *m.ObjectId
	}
	return Default_KafkaHeader_ObjectId
}

func (m *KafkaHeader) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return Default_KafkaHeader_Size
}

func (m *KafkaHeader) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_KafkaHeader_Status
}

func (m *KafkaHeader) GetTimeout() uint64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *KafkaHeader) GetForwardTarget() *ProcessId {
	if m != nil {
		return m.ForwardTarget
	}
	return nil
}

func (m *KafkaHeader) GetReturnTopic() string {
	if m != nil && m.ReturnTopic != nil {
		return *m.ReturnTopic
	}
	return ""
}

func (m *KafkaHeader) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func init() {
	proto.RegisterType((*NO_RESPONSE)(nil), "bgs.protocol.NO_RESPONSE")
	proto.RegisterType((*Address)(nil), "bgs.protocol.Address")
	proto.RegisterType((*ProcessId)(nil), "bgs.protocol.ProcessId")
	proto.RegisterType((*ObjectAddress)(nil), "bgs.protocol.ObjectAddress")
	proto.RegisterType((*NoData)(nil), "bgs.protocol.NoData")
	proto.RegisterType((*ErrorInfo)(nil), "bgs.protocol.ErrorInfo")
	proto.RegisterType((*FanoutTarget)(nil), "bgs.protocol.FanoutTarget")
	proto.RegisterType((*Header)(nil), "bgs.protocol.Header")
	proto.RegisterType((*KafkaHeader)(nil), "bgs.protocol.KafkaHeader")
}

func init() { proto.RegisterFile("rpc_types.proto", fileDescriptor_333001bce00ed081) }

var fileDescriptor_333001bce00ed081 = []byte{
	// 803 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x6f, 0xe3, 0x44,
	0x14, 0xc5, 0x49, 0xda, 0xc4, 0xd7, 0x76, 0xba, 0x0c, 0x85, 0x35, 0x5d, 0x01, 0xa9, 0x11, 0x6c,
	0x24, 0x44, 0x53, 0x55, 0x42, 0x2b, 0xf1, 0xc0, 0x47, 0x45, 0xd1, 0x46, 0x40, 0x1b, 0x4d, 0xfb,
	0xb4, 0x42, 0xb2, 0x26, 0xf6, 0x8d, 0x6d, 0xea, 0x7a, 0xac, 0x99, 0x09, 0xb0, 0xfc, 0x21, 0x7e,
	0x0a, 0x8f, 0xfc, 0x25, 0x34, 0x33, 0x76, 0x1a, 0x37, 0x15, 0xf0, 0xb2, 0x6f, 0x73, 0x8f, 0xcf,
	0x9d, 0x7b, 0xe7, 0x9c, 0x23, 0xc3, 0x81, 0xa8, 0x93, 0x58, 0xbd, 0xae, 0x51, 0x9e, 0xd4, 0x82,
	0x2b, 0x4e, 0xfc, 0x65, 0xd6, 0x1c, 0x13, 0x5e, 0x1e, 0x7d, 0x92, 0x95, 0x7c, 0xc9, 0xca, 0x18,
	0x7f, 0x57, 0x58, 0xc9, 0x82, 0x57, 0x72, 0xb6, 0x2a, 0xb0, 0x4c, 0x63, 0x5e, 0x2b, 0x5d, 0x59,
	0xe6, 0xd1, 0xa7, 0xbb, 0xb4, 0x3b, 0x54, 0x39, 0x7f, 0xc8, 0x7b, 0xfe, 0x18, 0x4f, 0x4a, 0x96,
	0xe1, 0x7f, 0x13, 0x25, 0x8a, 0x5f, 0x8b, 0xe4, 0x01, 0x31, 0x0a, 0xc0, 0xbb, 0xbc, 0x8a, 0xe9,
	0xc5, 0xf5, 0xe2, 0xea, 0xf2, 0xfa, 0x22, 0x7a, 0x01, 0xc3, 0x6f, 0xd3, 0x54, 0xa0, 0x94, 0x24,
	0x84, 0x21, 0xb3, 0xc7, 0xd0, 0x99, 0xf4, 0xa6, 0x2e, 0x6d, 0x4b, 0x42, 0x60, 0x50, 0x73, 0xa1,
	0xc2, 0xde, 0xc4, 0x99, 0x06, 0xd4, 0x9c, 0xa3, 0x17, 0xe0, 0x2e, 0x04, 0x4f, 0x50, 0xca, 0x79,
	0x4a, 0x0e, 0x61, 0xaf, 0x64, 0x4b, 0x2c, 0x4d, 0x63, 0x40, 0x6d, 0xa1, 0x51, 0xac, 0x79, 0x92,
	0x87, 0x3d, 0x8b, 0x9a, 0x22, 0xfa, 0x19, 0x82, 0xab, 0xe5, 0x2f, 0x98, 0xa8, 0x76, 0xee, 0x67,
	0x30, 0xc8, 0xb9, 0x54, 0xa6, 0xd7, 0x3b, 0x7b, 0x7a, 0xb2, 0xad, 0xe7, 0xc9, 0x66, 0x06, 0x35,
	0x24, 0xf2, 0x21, 0xb8, 0xdc, 0x74, 0xc7, 0x45, 0x6a, 0xf6, 0x19, 0x7c, 0xe9, 0x9c, 0xd2, 0x91,
	0xc5, 0xe6, 0x69, 0x34, 0x82, 0xfd, 0x4b, 0xfe, 0x1d, 0x53, 0x2c, 0xfa, 0xd3, 0x01, 0xf7, 0x42,
	0x08, 0x2e, 0xe6, 0xd5, 0x8a, 0x93, 0x73, 0x18, 0x37, 0x7d, 0xdb, 0x6f, 0xf4, 0xce, 0x9e, 0x75,
	0xc7, 0x75, 0x36, 0xa3, 0x01, 0xef, 0x2c, 0xfa, 0x1e, 0xec, 0x4b, 0xc5, 0xd4, 0x5a, 0x36, 0x0f,
	0x6a, 0x2a, 0x72, 0x0c, 0x7e, 0xab, 0x75, 0xce, 0x64, 0x1e, 0xf6, 0xcd, 0x57, 0xaf, 0xc1, 0x5e,
	0x32, 0x99, 0x93, 0x67, 0xe0, 0x36, 0xfe, 0x16, 0x69, 0x38, 0x30, 0xdf, 0x47, 0x16, 0x98, 0xa7,
	0xd1, 0x2b, 0xf0, 0xbf, 0x67, 0x15, 0x5f, 0xab, 0x1b, 0x26, 0x32, 0x54, 0x9a, 0x9c, 0x94, 0x05,
	0x56, 0xe6, 0x8d, 0xce, 0xc4, 0x99, 0xba, 0x74, 0x64, 0x81, 0x79, 0x4a, 0x9e, 0x40, 0xff, 0x16,
	0x5f, 0x9b, 0xa7, 0xfb, 0x54, 0x1f, 0x35, 0xfd, 0x5e, 0x92, 0xbe, 0x96, 0x64, 0x4b, 0x8f, 0xbf,
	0xf6, 0x60, 0xff, 0x25, 0xb2, 0x14, 0x05, 0xf9, 0x00, 0xa0, 0x5d, 0xd3, 0xdc, 0xab, 0x97, 0x70,
	0x1b, 0x64, 0x9e, 0x76, 0x57, 0xb4, 0x4e, 0x6f, 0x56, 0xd4, 0x56, 0x2a, 0x7e, 0x8b, 0x55, 0xf3,
	0x36, 0x5b, 0x74, 0xcd, 0x18, 0xec, 0x98, 0x41, 0xde, 0x85, 0x81, 0x2c, 0xfe, 0xc0, 0x70, 0x4f,
	0xdf, 0xa6, 0x3f, 0x99, 0x92, 0xbc, 0xbf, 0xd1, 0x71, 0xbf, 0xfd, 0xd0, 0x4a, 0xf9, 0x39, 0xec,
	0xa1, 0xf6, 0x2c, 0x1c, 0x4e, 0xfa, 0xbb, 0x61, 0xd8, 0xd8, 0x49, 0x2d, 0x4b, 0x47, 0x56, 0x15,
	0x77, 0xc8, 0xd7, 0x2a, 0x1c, 0x99, 0x87, 0xb7, 0x25, 0xf9, 0x08, 0xbc, 0x42, 0xc6, 0x02, 0x65,
	0xcd, 0x2b, 0x89, 0xa1, 0x3b, 0x71, 0xa6, 0x23, 0x0a, 0x85, 0xa4, 0x0d, 0x42, 0xbe, 0x81, 0x83,
	0x15, 0x17, 0xbf, 0x31, 0x91, 0xc6, 0xca, 0xc8, 0x2e, 0x43, 0x78, 0x6c, 0xe6, 0x7d, 0x00, 0xc7,
	0x0d, 0xdf, 0xba, 0xb4, 0x6b, 0xbb, 0x37, 0x71, 0xa6, 0xc3, 0x1d, 0xdb, 0xef, 0x9d, 0x0c, 0x1e,
	0x38, 0xf9, 0x35, 0x04, 0x2b, 0x63, 0x7b, 0xb3, 0x40, 0x38, 0x36, 0xf3, 0x8f, 0xba, 0xf3, 0xb7,
	0x93, 0x41, 0xfd, 0xd5, 0x76, 0x4e, 0xbe, 0x80, 0xa7, 0x9b, 0xdb, 0xe3, 0xee, 0x55, 0x07, 0x93,
	0xfe, 0xd4, 0xa5, 0x87, 0xed, 0xac, 0x4e, 0xbc, 0x3e, 0x86, 0xa0, 0x69, 0x13, 0x98, 0x70, 0x91,
	0x86, 0x4f, 0x4c, 0x96, 0x7c, 0x0b, 0x52, 0x83, 0x91, 0xe7, 0x70, 0xc0, 0x45, 0x91, 0x15, 0x15,
	0x2b, 0x63, 0x89, 0x55, 0x8a, 0x22, 0x7c, 0xdb, 0xd0, 0xc6, 0x2d, 0x7c, 0x6d, 0x50, 0xab, 0x82,
	0x3e, 0xc5, 0x36, 0x20, 0xc4, 0x24, 0xc7, 0xb3, 0xd8, 0x8d, 0x89, 0xc9, 0x31, 0xf8, 0x82, 0xaf,
	0x15, 0x8a, 0xd8, 0xfe, 0x24, 0xde, 0xb1, 0x14, 0x8b, 0xfd, 0x68, 0x7e, 0x15, 0xc7, 0xe0, 0x1b,
	0x47, 0x63, 0x81, 0x4c, 0xf2, 0x2a, 0x3c, 0x34, 0x5a, 0x79, 0x06, 0xa3, 0x06, 0x8a, 0xfe, 0xee,
	0x81, 0xf7, 0x03, 0x5b, 0xdd, 0xb2, 0x26, 0xce, 0x0f, 0xe5, 0x77, 0x1e, 0x95, 0xff, 0x7f, 0x45,
	0xda, 0x79, 0x93, 0x91, 0xde, 0xca, 0xe8, 0xb0, 0x9b, 0xd1, 0xaf, 0x60, 0xdc, 0x8d, 0xa0, 0x09,
	0xf1, 0xbf, 0x24, 0x30, 0xe8, 0x24, 0xd0, 0xe8, 0x8a, 0x6a, 0x2d, 0xaa, 0x58, 0xf1, 0xba, 0x48,
	0x4c, 0xc8, 0x5d, 0xea, 0x59, 0xec, 0x46, 0x43, 0xdd, 0x00, 0x7a, 0xdd, 0x00, 0x9e, 0xff, 0x04,
	0xc1, 0xb2, 0x42, 0xb5, 0x99, 0x74, 0x3e, 0xa2, 0x75, 0xb2, 0xd0, 0xc5, 0xab, 0xb3, 0xac, 0x50,
	0xf9, 0x7a, 0x79, 0x92, 0xf0, 0xbb, 0x99, 0x5c, 0xd7, 0x28, 0xea, 0xd3, 0x53, 0x35, 0xcb, 0x78,
	0x9d, 0xa3, 0x48, 0x04, 0x5b, 0xa9, 0x99, 0xee, 0x9c, 0x2d, 0x33, 0x39, 0x6b, 0xbb, 0x17, 0x6f,
	0x2d, 0x9c, 0x45, 0x6f, 0xd1, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x72, 0x25, 0x5a, 0xef, 0x22,
	0x07, 0x00, 0x00,
}
