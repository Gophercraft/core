// Code generated by protoc-gen-gcraft. DO NOT EDIT.
// source: rpc_config.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RPCMethodConfig struct {
	ServiceName          *string  `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"` // Deprecated: Do not use.
	MethodName           *string  `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`    // Deprecated: Do not use.
	FixedCallCost        *uint32  `protobuf:"varint,3,opt,name=fixed_call_cost,json=fixedCallCost,def=1" json:"fixed_call_cost,omitempty"`
	FixedPacketSize      *uint32  `protobuf:"varint,4,opt,name=fixed_packet_size,json=fixedPacketSize,def=0" json:"fixed_packet_size,omitempty"`
	VariableMultiplier   *float32 `protobuf:"fixed32,5,opt,name=variable_multiplier,json=variableMultiplier,def=0" json:"variable_multiplier,omitempty"`
	Multiplier           *float32 `protobuf:"fixed32,6,opt,name=multiplier,def=1" json:"multiplier,omitempty"`
	RateLimitCount       *uint32  `protobuf:"varint,7,opt,name=rate_limit_count,json=rateLimitCount" json:"rate_limit_count,omitempty"`
	RateLimitSeconds     *uint32  `protobuf:"varint,8,opt,name=rate_limit_seconds,json=rateLimitSeconds" json:"rate_limit_seconds,omitempty"`
	MaxPacketSize        *uint32  `protobuf:"varint,9,opt,name=max_packet_size,json=maxPacketSize" json:"max_packet_size,omitempty"`
	MaxEncodedSize       *uint32  `protobuf:"varint,10,opt,name=max_encoded_size,json=maxEncodedSize" json:"max_encoded_size,omitempty"`
	Timeout              *float32 `protobuf:"fixed32,11,opt,name=timeout" json:"timeout,omitempty"`
	CapBalance           *uint32  `protobuf:"varint,12,opt,name=cap_balance,json=capBalance" json:"cap_balance,omitempty"`
	IncomePerSecond      *float32 `protobuf:"fixed32,13,opt,name=income_per_second,json=incomePerSecond,def=0" json:"income_per_second,omitempty"`
	ServiceHash          *uint32  `protobuf:"varint,14,opt,name=service_hash,json=serviceHash" json:"service_hash,omitempty"`
	MethodId             *uint32  `protobuf:"varint,15,opt,name=method_id,json=methodId" json:"method_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPCMethodConfig) Reset()         { *m = RPCMethodConfig{} }
func (m *RPCMethodConfig) String() string { return proto.CompactTextString(m) }
func (*RPCMethodConfig) ProtoMessage()    {}
func (*RPCMethodConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9626437a6de6ebba, []int{0}
}

func (m *RPCMethodConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCMethodConfig.Unmarshal(m, b)
}
func (m *RPCMethodConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCMethodConfig.Marshal(b, m, deterministic)
}
func (m *RPCMethodConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCMethodConfig.Merge(m, src)
}
func (m *RPCMethodConfig) XXX_Size() int {
	return xxx_messageInfo_RPCMethodConfig.Size(m)
}
func (m *RPCMethodConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCMethodConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RPCMethodConfig proto.InternalMessageInfo

const Default_RPCMethodConfig_FixedCallCost uint32 = 1
const Default_RPCMethodConfig_FixedPacketSize uint32 = 0
const Default_RPCMethodConfig_VariableMultiplier float32 = 0
const Default_RPCMethodConfig_Multiplier float32 = 1
const Default_RPCMethodConfig_IncomePerSecond float32 = 0

// Deprecated: Do not use.
func (m *RPCMethodConfig) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

// Deprecated: Do not use.
func (m *RPCMethodConfig) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *RPCMethodConfig) GetFixedCallCost() uint32 {
	if m != nil && m.FixedCallCost != nil {
		return *m.FixedCallCost
	}
	return Default_RPCMethodConfig_FixedCallCost
}

func (m *RPCMethodConfig) GetFixedPacketSize() uint32 {
	if m != nil && m.FixedPacketSize != nil {
		return *m.FixedPacketSize
	}
	return Default_RPCMethodConfig_FixedPacketSize
}

func (m *RPCMethodConfig) GetVariableMultiplier() float32 {
	if m != nil && m.VariableMultiplier != nil {
		return *m.VariableMultiplier
	}
	return Default_RPCMethodConfig_VariableMultiplier
}

func (m *RPCMethodConfig) GetMultiplier() float32 {
	if m != nil && m.Multiplier != nil {
		return *m.Multiplier
	}
	return Default_RPCMethodConfig_Multiplier
}

func (m *RPCMethodConfig) GetRateLimitCount() uint32 {
	if m != nil && m.RateLimitCount != nil {
		return *m.RateLimitCount
	}
	return 0
}

func (m *RPCMethodConfig) GetRateLimitSeconds() uint32 {
	if m != nil && m.RateLimitSeconds != nil {
		return *m.RateLimitSeconds
	}
	return 0
}

func (m *RPCMethodConfig) GetMaxPacketSize() uint32 {
	if m != nil && m.MaxPacketSize != nil {
		return *m.MaxPacketSize
	}
	return 0
}

func (m *RPCMethodConfig) GetMaxEncodedSize() uint32 {
	if m != nil && m.MaxEncodedSize != nil {
		return *m.MaxEncodedSize
	}
	return 0
}

func (m *RPCMethodConfig) GetTimeout() float32 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *RPCMethodConfig) GetCapBalance() uint32 {
	if m != nil && m.CapBalance != nil {
		return *m.CapBalance
	}
	return 0
}

func (m *RPCMethodConfig) GetIncomePerSecond() float32 {
	if m != nil && m.IncomePerSecond != nil {
		return *m.IncomePerSecond
	}
	return Default_RPCMethodConfig_IncomePerSecond
}

func (m *RPCMethodConfig) GetServiceHash() uint32 {
	if m != nil && m.ServiceHash != nil {
		return *m.ServiceHash
	}
	return 0
}

func (m *RPCMethodConfig) GetMethodId() uint32 {
	if m != nil && m.MethodId != nil {
		return *m.MethodId
	}
	return 0
}

type RPCMeterConfig struct {
	Method               []*RPCMethodConfig `protobuf:"bytes,1,rep,name=method" json:"method,omitempty"`
	IncomePerSecond      *uint32            `protobuf:"varint,2,opt,name=income_per_second,json=incomePerSecond,def=1" json:"income_per_second,omitempty"`
	InitialBalance       *uint32            `protobuf:"varint,3,opt,name=initial_balance,json=initialBalance" json:"initial_balance,omitempty"`
	CapBalance           *uint32            `protobuf:"varint,4,opt,name=cap_balance,json=capBalance" json:"cap_balance,omitempty"`
	StartupPeriod        *float32           `protobuf:"fixed32,5,opt,name=startup_period,json=startupPeriod,def=0" json:"startup_period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RPCMeterConfig) Reset()         { *m = RPCMeterConfig{} }
func (m *RPCMeterConfig) String() string { return proto.CompactTextString(m) }
func (*RPCMeterConfig) ProtoMessage()    {}
func (*RPCMeterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9626437a6de6ebba, []int{1}
}

func (m *RPCMeterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPCMeterConfig.Unmarshal(m, b)
}
func (m *RPCMeterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPCMeterConfig.Marshal(b, m, deterministic)
}
func (m *RPCMeterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPCMeterConfig.Merge(m, src)
}
func (m *RPCMeterConfig) XXX_Size() int {
	return xxx_messageInfo_RPCMeterConfig.Size(m)
}
func (m *RPCMeterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RPCMeterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RPCMeterConfig proto.InternalMessageInfo

const Default_RPCMeterConfig_IncomePerSecond uint32 = 1
const Default_RPCMeterConfig_StartupPeriod float32 = 0

func (m *RPCMeterConfig) GetMethod() []*RPCMethodConfig {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *RPCMeterConfig) GetIncomePerSecond() uint32 {
	if m != nil && m.IncomePerSecond != nil {
		return *m.IncomePerSecond
	}
	return Default_RPCMeterConfig_IncomePerSecond
}

func (m *RPCMeterConfig) GetInitialBalance() uint32 {
	if m != nil && m.InitialBalance != nil {
		return *m.InitialBalance
	}
	return 0
}

func (m *RPCMeterConfig) GetCapBalance() uint32 {
	if m != nil && m.CapBalance != nil {
		return *m.CapBalance
	}
	return 0
}

func (m *RPCMeterConfig) GetStartupPeriod() float32 {
	if m != nil && m.StartupPeriod != nil {
		return *m.StartupPeriod
	}
	return Default_RPCMeterConfig_StartupPeriod
}

type ProtocolAlias struct {
	ServerServiceName    *string  `protobuf:"bytes,1,req,name=server_service_name,json=serverServiceName" json:"server_service_name,omitempty"`
	ClientServiceName    *string  `protobuf:"bytes,2,req,name=client_service_name,json=clientServiceName" json:"client_service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtocolAlias) Reset()         { *m = ProtocolAlias{} }
func (m *ProtocolAlias) String() string { return proto.CompactTextString(m) }
func (*ProtocolAlias) ProtoMessage()    {}
func (*ProtocolAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_9626437a6de6ebba, []int{2}
}

func (m *ProtocolAlias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolAlias.Unmarshal(m, b)
}
func (m *ProtocolAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolAlias.Marshal(b, m, deterministic)
}
func (m *ProtocolAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolAlias.Merge(m, src)
}
func (m *ProtocolAlias) XXX_Size() int {
	return xxx_messageInfo_ProtocolAlias.Size(m)
}
func (m *ProtocolAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolAlias.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolAlias proto.InternalMessageInfo

func (m *ProtocolAlias) GetServerServiceName() string {
	if m != nil && m.ServerServiceName != nil {
		return *m.ServerServiceName
	}
	return ""
}

func (m *ProtocolAlias) GetClientServiceName() string {
	if m != nil && m.ClientServiceName != nil {
		return *m.ClientServiceName
	}
	return ""
}

type ServiceAliases struct {
	ProtocolAlias        []*ProtocolAlias `protobuf:"bytes,1,rep,name=protocol_alias,json=protocolAlias" json:"protocol_alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ServiceAliases) Reset()         { *m = ServiceAliases{} }
func (m *ServiceAliases) String() string { return proto.CompactTextString(m) }
func (*ServiceAliases) ProtoMessage()    {}
func (*ServiceAliases) Descriptor() ([]byte, []int) {
	return fileDescriptor_9626437a6de6ebba, []int{3}
}

func (m *ServiceAliases) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAliases.Unmarshal(m, b)
}
func (m *ServiceAliases) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAliases.Marshal(b, m, deterministic)
}
func (m *ServiceAliases) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAliases.Merge(m, src)
}
func (m *ServiceAliases) XXX_Size() int {
	return xxx_messageInfo_ServiceAliases.Size(m)
}
func (m *ServiceAliases) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAliases.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAliases proto.InternalMessageInfo

func (m *ServiceAliases) GetProtocolAlias() []*ProtocolAlias {
	if m != nil {
		return m.ProtocolAlias
	}
	return nil
}

func init() {
	proto.RegisterType((*RPCMethodConfig)(nil), "bgs.protocol.config.RPCMethodConfig")
	proto.RegisterType((*RPCMeterConfig)(nil), "bgs.protocol.config.RPCMeterConfig")
	proto.RegisterType((*ProtocolAlias)(nil), "bgs.protocol.config.ProtocolAlias")
	proto.RegisterType((*ServiceAliases)(nil), "bgs.protocol.config.ServiceAliases")
}

func init() { proto.RegisterFile("rpc_config.proto", fileDescriptor_9626437a6de6ebba) }

var fileDescriptor_9626437a6de6ebba = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xcd, 0x6e, 0xdb, 0x38,
	0x14, 0x85, 0x21, 0x27, 0x93, 0xc4, 0xd7, 0x91, 0xed, 0xd0, 0x1b, 0x02, 0xb3, 0x18, 0xc7, 0xd3,
	0x1f, 0x15, 0x68, 0xe5, 0x24, 0xbb, 0xfe, 0x6c, 0x1a, 0xa3, 0x40, 0x03, 0x34, 0x85, 0xa1, 0xec,
	0xda, 0x85, 0x40, 0x53, 0x37, 0x36, 0x51, 0x4a, 0x14, 0x48, 0x3a, 0x30, 0xf2, 0xb8, 0x7d, 0x83,
	0xbe, 0x41, 0x21, 0x52, 0x72, 0xe4, 0x24, 0x3b, 0xf1, 0x9c, 0x8f, 0xe4, 0xe5, 0xc1, 0x11, 0x0c,
	0x75, 0xc9, 0x53, 0xae, 0x8a, 0x5b, 0xb1, 0x8c, 0x4b, 0xad, 0xac, 0x22, 0xa3, 0xc5, 0xd2, 0xf8,
	0x4f, 0xae, 0x64, 0xec, 0xad, 0xc9, 0xef, 0x7d, 0x18, 0x24, 0xf3, 0xd9, 0x35, 0xda, 0x95, 0xca,
	0x66, 0x4e, 0x23, 0x2f, 0xe1, 0xd8, 0xa0, 0xbe, 0x13, 0x1c, 0xd3, 0x82, 0xe5, 0x48, 0x83, 0x71,
	0x10, 0x75, 0x2f, 0x3b, 0x34, 0x48, 0x7a, 0xb5, 0xfe, 0x9d, 0xe5, 0x48, 0xfe, 0x87, 0x5e, 0xee,
	0xb6, 0x79, 0xaa, 0xb3, 0xa5, 0xc0, 0xcb, 0x0e, 0x7a, 0x03, 0x83, 0x5b, 0xb1, 0xc1, 0x2c, 0xe5,
	0x4c, 0xca, 0x94, 0x2b, 0x63, 0xe9, 0xde, 0x38, 0x88, 0xc2, 0x0f, 0xc1, 0x79, 0x12, 0x3a, 0x67,
	0xc6, 0xa4, 0x9c, 0x29, 0x63, 0xc9, 0x3b, 0x38, 0xf1, 0x68, 0xc9, 0xf8, 0x2f, 0xb4, 0xa9, 0x11,
	0xf7, 0x48, 0xf7, 0x3d, 0x7c, 0x96, 0xf8, 0x63, 0xe6, 0xce, 0xba, 0x11, 0xf7, 0x48, 0x2e, 0x60,
	0x74, 0xc7, 0xb4, 0x60, 0x0b, 0x89, 0x69, 0xbe, 0x96, 0x56, 0x94, 0x52, 0xa0, 0xa6, 0xff, 0x8c,
	0x83, 0xa8, 0x53, 0x6d, 0x20, 0x8d, 0x7b, 0xbd, 0x35, 0xc9, 0x29, 0x40, 0x0b, 0x3d, 0xf0, 0xe8,
	0x79, 0xd2, 0x12, 0x49, 0x04, 0x43, 0xcd, 0x2c, 0xa6, 0x52, 0xe4, 0xc2, 0xa6, 0x5c, 0xad, 0x0b,
	0x4b, 0x0f, 0xab, 0x21, 0x92, 0x7e, 0xa5, 0x7f, 0xab, 0xe4, 0x59, 0xa5, 0x92, 0xb7, 0x40, 0x5a,
	0xa4, 0x41, 0xae, 0x8a, 0xcc, 0xd0, 0x23, 0xc7, 0x0e, 0xb7, 0xec, 0x8d, 0xd7, 0xc9, 0x2b, 0x18,
	0xe4, 0x6c, 0xb3, 0xf3, 0xb6, 0xae, 0x43, 0xc3, 0x9c, 0x6d, 0x5a, 0xcf, 0x8a, 0x60, 0x58, 0x71,
	0x58, 0x70, 0x95, 0x61, 0xe6, 0x41, 0xf0, 0xf7, 0xe7, 0x6c, 0xf3, 0xc5, 0xcb, 0x8e, 0xa4, 0x70,
	0x68, 0x45, 0x8e, 0x6a, 0x6d, 0x69, 0xaf, 0x7a, 0x49, 0xd2, 0x2c, 0xc9, 0x7f, 0xd0, 0xe3, 0xac,
	0x4c, 0x17, 0x4c, 0xb2, 0x82, 0x23, 0x3d, 0x76, 0xdb, 0x81, 0xb3, 0xf2, 0xd2, 0x2b, 0x55, 0xd4,
	0xa2, 0xe0, 0x2a, 0xc7, 0xb4, 0x44, 0x5d, 0x8f, 0x4e, 0xc3, 0x26, 0xb9, 0x81, 0xf7, 0xe6, 0xa8,
	0xfd, 0xf0, 0xe4, 0xf4, 0xa1, 0x10, 0x2b, 0x66, 0x56, 0xb4, 0xef, 0x0e, 0x6c, 0xca, 0xf0, 0x95,
	0x99, 0x15, 0xf9, 0x17, 0xba, 0x75, 0x19, 0x44, 0x46, 0x07, 0xce, 0x3f, 0xf2, 0xc2, 0x55, 0x36,
	0xf9, 0x13, 0x40, 0xdf, 0x97, 0x0c, 0x75, 0xdd, 0xb1, 0x4f, 0x70, 0xe0, 0x6d, 0x1a, 0x8c, 0xf7,
	0xa2, 0xde, 0xc5, 0x8b, 0xf8, 0x99, 0x76, 0xc6, 0x8f, 0x9a, 0x99, 0xd4, 0x7b, 0x9e, 0x9f, 0xbf,
	0xd3, 0xf4, 0xea, 0xc9, 0xfc, 0xaf, 0x61, 0x20, 0x0a, 0x61, 0x05, 0x93, 0xdb, 0x4c, 0xf6, 0x7c,
	0xa4, 0xb5, 0xdc, 0xe4, 0xf2, 0x28, 0xb8, 0xfd, 0x27, 0xc1, 0x45, 0xd0, 0x37, 0x96, 0x69, 0xbb,
	0x2e, 0xab, 0x9b, 0x85, 0xca, 0x1e, 0xfa, 0x16, 0xd6, 0xc6, 0xdc, 0xe9, 0x13, 0x05, 0xe1, 0xbc,
	0x7e, 0xcd, 0x67, 0x29, 0x98, 0x21, 0x31, 0x8c, 0xaa, 0xc0, 0xdc, 0xbc, 0x3b, 0x3f, 0x57, 0x27,
	0xea, 0x26, 0x27, 0xde, 0xba, 0x69, 0xfd, 0x5e, 0x31, 0x8c, 0xb8, 0x14, 0x58, 0xd8, 0x5d, 0xbe,
	0xe3, 0x79, 0x6f, 0xb5, 0xf8, 0xc9, 0x4f, 0xe8, 0xd7, 0x4b, 0x77, 0x1f, 0x1a, 0x72, 0x05, 0xfd,
	0x26, 0xd0, 0x94, 0x55, 0x5a, 0x9d, 0xf5, 0xe4, 0xd9, 0xac, 0x77, 0xa6, 0x4d, 0xc2, 0xb2, 0xbd,
	0xbc, 0xfc, 0xf8, 0xe3, 0xfd, 0x52, 0xd8, 0xd5, 0x7a, 0x11, 0x73, 0x95, 0x4f, 0xcd, 0xba, 0x44,
	0x5d, 0x9e, 0x9d, 0xd9, 0xe9, 0x52, 0x95, 0x2b, 0xd4, 0x5c, 0xb3, 0x5b, 0x3b, 0x5d, 0x14, 0x68,
	0xa7, 0x8b, 0xa5, 0x99, 0x36, 0x5b, 0xa7, 0xfe, 0xe4, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x71,
	0x82, 0x66, 0xeb, 0x8b, 0x04, 0x00, 0x00,
}
