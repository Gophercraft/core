// Code generated by protoc-gen-gcraft. DO NOT EDIT.
// source: event_view_types.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventOrder int32

const (
	EventOrder_EVENT_DESCENDING EventOrder = 0
	EventOrder_EVENT_ASCENDING  EventOrder = 1
)

var EventOrder_name = map[int32]string{
	0: "EVENT_DESCENDING",
	1: "EVENT_ASCENDING",
}

var EventOrder_value = map[string]int32{
	"EVENT_DESCENDING": 0,
	"EVENT_ASCENDING":  1,
}

func (x EventOrder) Enum() *EventOrder {
	p := new(EventOrder)
	*p = x
	return p
}

func (x EventOrder) String() string {
	return proto.EnumName(EventOrder_name, int32(x))
}

func (x *EventOrder) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventOrder_value, data, "EventOrder")
	if err != nil {
		return err
	}
	*x = EventOrder(value)
	return nil
}

func (EventOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_de56a64003ce2508, []int{0}
}

type GetEventOptions struct {
	FetchFrom            *uint64     `protobuf:"varint,1,opt,name=fetch_from,json=fetchFrom" json:"fetch_from,omitempty"`
	FetchUntil           *uint64     `protobuf:"varint,2,opt,name=fetch_until,json=fetchUntil" json:"fetch_until,omitempty"`
	MaxEvents            *uint32     `protobuf:"varint,3,opt,name=max_events,json=maxEvents" json:"max_events,omitempty"`
	Order                *EventOrder `protobuf:"varint,4,opt,name=order,enum=bgs.protocol.EventOrder" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetEventOptions) Reset()         { *m = GetEventOptions{} }
func (m *GetEventOptions) String() string { return proto.CompactTextString(m) }
func (*GetEventOptions) ProtoMessage()    {}
func (*GetEventOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_de56a64003ce2508, []int{0}
}

func (m *GetEventOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventOptions.Unmarshal(m, b)
}
func (m *GetEventOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventOptions.Marshal(b, m, deterministic)
}
func (m *GetEventOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventOptions.Merge(m, src)
}
func (m *GetEventOptions) XXX_Size() int {
	return xxx_messageInfo_GetEventOptions.Size(m)
}
func (m *GetEventOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventOptions proto.InternalMessageInfo

func (m *GetEventOptions) GetFetchFrom() uint64 {
	if m != nil && m.FetchFrom != nil {
		return *m.FetchFrom
	}
	return 0
}

func (m *GetEventOptions) GetFetchUntil() uint64 {
	if m != nil && m.FetchUntil != nil {
		return *m.FetchUntil
	}
	return 0
}

func (m *GetEventOptions) GetMaxEvents() uint32 {
	if m != nil && m.MaxEvents != nil {
		return *m.MaxEvents
	}
	return 0
}

func (m *GetEventOptions) GetOrder() EventOrder {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return EventOrder_EVENT_DESCENDING
}

type ViewMarker struct {
	LastReadTime         *uint64  `protobuf:"varint,1,opt,name=last_read_time,json=lastReadTime" json:"last_read_time,omitempty"`
	LastMessageTime      *uint64  `protobuf:"varint,2,opt,name=last_message_time,json=lastMessageTime" json:"last_message_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewMarker) Reset()         { *m = ViewMarker{} }
func (m *ViewMarker) String() string { return proto.CompactTextString(m) }
func (*ViewMarker) ProtoMessage()    {}
func (*ViewMarker) Descriptor() ([]byte, []int) {
	return fileDescriptor_de56a64003ce2508, []int{1}
}

func (m *ViewMarker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewMarker.Unmarshal(m, b)
}
func (m *ViewMarker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewMarker.Marshal(b, m, deterministic)
}
func (m *ViewMarker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewMarker.Merge(m, src)
}
func (m *ViewMarker) XXX_Size() int {
	return xxx_messageInfo_ViewMarker.Size(m)
}
func (m *ViewMarker) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewMarker.DiscardUnknown(m)
}

var xxx_messageInfo_ViewMarker proto.InternalMessageInfo

func (m *ViewMarker) GetLastReadTime() uint64 {
	if m != nil && m.LastReadTime != nil {
		return *m.LastReadTime
	}
	return 0
}

func (m *ViewMarker) GetLastMessageTime() uint64 {
	if m != nil && m.LastMessageTime != nil {
		return *m.LastMessageTime
	}
	return 0
}

func init() {
	proto.RegisterEnum("bgs.protocol.EventOrder", EventOrder_name, EventOrder_value)
	proto.RegisterType((*GetEventOptions)(nil), "bgs.protocol.GetEventOptions")
	proto.RegisterType((*ViewMarker)(nil), "bgs.protocol.ViewMarker")
}

func init() { proto.RegisterFile("event_view_types.proto", fileDescriptor_de56a64003ce2508) }

var fileDescriptor_de56a64003ce2508 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcf, 0x4f, 0xfa, 0x30,
	0x18, 0xc6, 0xbf, 0xfb, 0x8a, 0x07, 0x5e, 0x11, 0xb0, 0x1a, 0xb3, 0x8b, 0x91, 0x10, 0x0f, 0x84,
	0xc3, 0x46, 0x88, 0x89, 0x67, 0x95, 0x49, 0x3c, 0x80, 0xc9, 0x44, 0x0e, 0x1e, 0x6c, 0xba, 0xf1,
	0x32, 0x1a, 0xe9, 0xba, 0xb4, 0x1d, 0xe0, 0x7f, 0xe3, 0x9f, 0x6a, 0xba, 0xe2, 0x8f, 0x5b, 0xf3,
	0x79, 0x3e, 0x6f, 0x9e, 0xa7, 0x70, 0x8e, 0x1b, 0xcc, 0x0d, 0xdd, 0x70, 0xdc, 0x52, 0xf3, 0x51,
	0xa0, 0x0e, 0x0a, 0x25, 0x8d, 0x24, 0x8d, 0x24, 0xdb, 0x3f, 0x53, 0xb9, 0xee, 0x7e, 0x7a, 0xd0,
	0x1a, 0xa3, 0x89, 0xac, 0xfb, 0x54, 0x18, 0x2e, 0x73, 0x4d, 0x2e, 0x00, 0x96, 0x68, 0xd2, 0x15,
	0x5d, 0x2a, 0x29, 0x7c, 0xaf, 0xe3, 0xf5, 0x6a, 0x71, 0xbd, 0x22, 0x0f, 0x4a, 0x0a, 0x72, 0x09,
	0x47, 0x2e, 0x2e, 0x73, 0xc3, 0xd7, 0xfe, 0xff, 0x2a, 0x77, 0x17, 0x2f, 0x96, 0xd8, 0x7b, 0xc1,
	0x76, 0xb4, 0xea, 0xd7, 0xfe, 0x41, 0xc7, 0xeb, 0x1d, 0xc7, 0x75, 0xc1, 0x76, 0x55, 0x89, 0x26,
	0x01, 0x1c, 0x4a, 0xb5, 0x40, 0xe5, 0xd7, 0x3a, 0x5e, 0xaf, 0x39, 0xf4, 0x83, 0xbf, 0x83, 0x02,
	0xb7, 0xc4, 0xe6, 0xb1, 0xd3, 0xba, 0x6f, 0x00, 0x73, 0x8e, 0xdb, 0x09, 0x53, 0xef, 0xa8, 0xc8,
	0x15, 0x34, 0xd7, 0x4c, 0x1b, 0xaa, 0x90, 0x2d, 0xa8, 0xe1, 0x02, 0xf7, 0x03, 0x1b, 0x96, 0xc6,
	0xc8, 0x16, 0x33, 0x2e, 0x90, 0xf4, 0xe1, 0xa4, 0xb2, 0x04, 0x6a, 0xcd, 0x32, 0x74, 0xa2, 0x5b,
	0xda, 0xb2, 0xc1, 0xc4, 0x71, 0xeb, 0xf6, 0x6f, 0x00, 0x7e, 0x4b, 0xc9, 0x19, 0xb4, 0xa3, 0x79,
	0x34, 0x9d, 0xd1, 0x51, 0xf4, 0x7c, 0x1f, 0x4d, 0x47, 0x8f, 0xd3, 0x71, 0xfb, 0x1f, 0x39, 0x85,
	0x96, 0xa3, 0xb7, 0x3f, 0xd0, 0xbb, 0xbb, 0x7e, 0x1d, 0x66, 0xdc, 0xac, 0xca, 0x24, 0x48, 0xa5,
	0x08, 0x75, 0x59, 0xa0, 0x2a, 0x06, 0x03, 0x13, 0x66, 0xb2, 0x58, 0xa1, 0x4a, 0x15, 0x5b, 0x9a,
	0x30, 0xc9, 0xd1, 0x84, 0x49, 0xa6, 0xc3, 0xef, 0x0f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x6b,
	0x88, 0x27, 0xee, 0x98, 0x01, 0x00, 0x00,
}
