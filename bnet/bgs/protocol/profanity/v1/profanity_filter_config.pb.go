// Code generated by protoc-gen-gcraft. DO NOT EDIT.
// source: profanity_filter_config.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WordFilter struct {
	Type                 *string  `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Regex                *string  `protobuf:"bytes,2,req,name=regex" json:"regex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WordFilter) Reset()         { *m = WordFilter{} }
func (m *WordFilter) String() string { return proto.CompactTextString(m) }
func (*WordFilter) ProtoMessage()    {}
func (*WordFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_88d9ea6668990ce5, []int{0}
}

func (m *WordFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordFilter.Unmarshal(m, b)
}
func (m *WordFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordFilter.Marshal(b, m, deterministic)
}
func (m *WordFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordFilter.Merge(m, src)
}
func (m *WordFilter) XXX_Size() int {
	return xxx_messageInfo_WordFilter.Size(m)
}
func (m *WordFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_WordFilter.DiscardUnknown(m)
}

var xxx_messageInfo_WordFilter proto.InternalMessageInfo

func (m *WordFilter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *WordFilter) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

type WordFilters struct {
	Filters              []*WordFilter `protobuf:"bytes,1,rep,name=filters" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WordFilters) Reset()         { *m = WordFilters{} }
func (m *WordFilters) String() string { return proto.CompactTextString(m) }
func (*WordFilters) ProtoMessage()    {}
func (*WordFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_88d9ea6668990ce5, []int{1}
}

func (m *WordFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordFilters.Unmarshal(m, b)
}
func (m *WordFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordFilters.Marshal(b, m, deterministic)
}
func (m *WordFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordFilters.Merge(m, src)
}
func (m *WordFilters) XXX_Size() int {
	return xxx_messageInfo_WordFilters.Size(m)
}
func (m *WordFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_WordFilters.DiscardUnknown(m)
}

var xxx_messageInfo_WordFilters proto.InternalMessageInfo

func (m *WordFilters) GetFilters() []*WordFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func init() {
	proto.RegisterType((*WordFilter)(nil), "bgs.protocol.profanity.v1.WordFilter")
	proto.RegisterType((*WordFilters)(nil), "bgs.protocol.profanity.v1.WordFilters")
}

func init() { proto.RegisterFile("profanity_filter_config.proto", fileDescriptor_88d9ea6668990ce5) }

var fileDescriptor_88d9ea6668990ce5 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0x28, 0xca, 0x4f,
	0x4b, 0xcc, 0xcb, 0x2c, 0xa9, 0x8c, 0x4f, 0xcb, 0xcc, 0x29, 0x49, 0x2d, 0x8a, 0x4f, 0xce, 0xcf,
	0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x4c, 0x4a, 0x2f, 0x86, 0x30,
	0x93, 0xf3, 0x73, 0xf4, 0xe0, 0x6a, 0xf5, 0xca, 0x0c, 0x95, 0xcc, 0xb8, 0xb8, 0xc2, 0xf3, 0x8b,
	0x52, 0xdc, 0xc0, 0xba, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x18, 0x15, 0x98,
	0x34, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x11, 0x2e, 0xd6, 0xa2, 0xd4, 0xf4, 0xd4, 0x0a, 0x09, 0x26,
	0xb0, 0x20, 0x84, 0xa3, 0xe4, 0xc7, 0xc5, 0x8d, 0xd0, 0x57, 0x2c, 0x64, 0xcf, 0xc5, 0x0e, 0xb1,
	0xb8, 0x58, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x55, 0x0f, 0xa7, 0x9d, 0x7a, 0x08, 0x8d,
	0x41, 0x30, 0x5d, 0x4e, 0x8e, 0x51, 0xf6, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9,
	0xb9, 0xfa, 0xc5, 0xa5, 0x05, 0xa9, 0x45, 0x05, 0x06, 0x06, 0x25, 0xfa, 0xe9, 0xf9, 0x05, 0x19,
	0xa9, 0x45, 0xc9, 0x45, 0x89, 0x69, 0x25, 0xfa, 0x49, 0x79, 0xa9, 0x25, 0xfa, 0x49, 0xe9, 0xc5,
	0xfa, 0x30, 0x63, 0xf5, 0xe1, 0xc6, 0xea, 0x97, 0x19, 0x02, 0x02, 0x00, 0x00, 0xff, 0xff, 0x08,
	0x32, 0x1e, 0x5f, 0x05, 0x01, 0x00, 0x00,
}
