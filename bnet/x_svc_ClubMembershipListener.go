// generated by protoc-gen-gcraft : DO NOT EDIT
package bnet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protocol "github.com/Gophercraft/core/bnet/bgs/protocol"
	membership "github.com/Gophercraft/core/bnet/bgs/protocol/club/v1/membership"
	math "math"
)

// shut the compiler up
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = protocol.E_MethodOptions

const ClubMembershipListenerHash = 0x2B34597B

type ClubMembershipListener interface {
	OnClubAdded(*Conn, uint32, *membership.ClubAddedNotification)
	OnClubRemoved(*Conn, uint32, *membership.ClubRemovedNotification)
	OnReceivedInvitationAdded(*Conn, uint32, *membership.ReceivedInvitationAddedNotification)
	OnReceivedInvitationRemoved(*Conn, uint32, *membership.ReceivedInvitationRemovedNotification)
	OnSharedSettingsChanged(*Conn, uint32, *membership.SharedSettingsChangedNotification)
	OnStreamMentionAdded(*Conn, uint32, *membership.StreamMentionAddedNotification)
	OnStreamMentionRemoved(*Conn, uint32, *membership.StreamMentionRemovedNotification)
	OnStreamMentionAdvanceViewTime(*Conn, uint32, *membership.StreamMentionAdvanceViewTimeNotification)
}

func DispatchClubMembershipListener(conn *Conn, svc ClubMembershipListener, token uint32, method uint32, data []byte) error {
	switch method {
	case 1:
		var args membership.ClubAddedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnClubAdded(conn, token, &args)
	case 2:
		var args membership.ClubRemovedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnClubRemoved(conn, token, &args)
	case 3:
		var args membership.ReceivedInvitationAddedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnReceivedInvitationAdded(conn, token, &args)
	case 4:
		var args membership.ReceivedInvitationRemovedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnReceivedInvitationRemoved(conn, token, &args)
	case 5:
		var args membership.SharedSettingsChangedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnSharedSettingsChanged(conn, token, &args)
	case 6:
		var args membership.StreamMentionAddedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnStreamMentionAdded(conn, token, &args)
	case 7:
		var args membership.StreamMentionRemovedNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnStreamMentionRemoved(conn, token, &args)
	case 8:
		var args membership.StreamMentionAdvanceViewTimeNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.OnStreamMentionAdvanceViewTime(conn, token, &args)
	}
	return nil
}

type EmptyClubMembershipListener struct{}

func (e EmptyClubMembershipListener) OnClubAdded(conn *Conn, token uint32, args *membership.ClubAddedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnClubRemoved(conn *Conn, token uint32, args *membership.ClubRemovedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnReceivedInvitationAdded(conn *Conn, token uint32, args *membership.ReceivedInvitationAddedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnReceivedInvitationRemoved(conn *Conn, token uint32, args *membership.ReceivedInvitationRemovedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnSharedSettingsChanged(conn *Conn, token uint32, args *membership.SharedSettingsChangedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnStreamMentionAdded(conn *Conn, token uint32, args *membership.StreamMentionAddedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnStreamMentionRemoved(conn *Conn, token uint32, args *membership.StreamMentionRemovedNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyClubMembershipListener) OnStreamMentionAdvanceViewTime(conn *Conn, token uint32, args *membership.StreamMentionAdvanceViewTimeNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}

func (c *Conn) ClubMembershipListener_Request_OnClubAdded(args *membership.ClubAddedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 1, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnClubRemoved(args *membership.ClubRemovedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 2, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnReceivedInvitationAdded(args *membership.ReceivedInvitationAddedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 3, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnReceivedInvitationRemoved(args *membership.ReceivedInvitationRemovedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 4, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnSharedSettingsChanged(args *membership.SharedSettingsChangedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 5, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnStreamMentionAdded(args *membership.StreamMentionAddedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 6, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnStreamMentionRemoved(args *membership.StreamMentionRemovedNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 7, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) ClubMembershipListener_Request_OnStreamMentionAdvanceViewTime(args *membership.StreamMentionAdvanceViewTimeNotification) error {
	header, _, err := c.Request(ClubMembershipListenerHash, 8, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}
