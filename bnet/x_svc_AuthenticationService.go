// generated by protoc-gen-gcraft : DO NOT EDIT
package bnet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	protocol "github.com/Gophercraft/core/bnet/bgs/protocol"
	v1 "github.com/Gophercraft/core/bnet/bgs/protocol/authentication/v1"
	math "math"
)

// shut the compiler up
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = protocol.E_MethodOptions

const AuthenticationServiceHash = 0x0DECFC01

type AuthenticationService interface {
	Logon(*Conn, uint32, *v1.LogonRequest)
	ModuleNotify(*Conn, uint32, *v1.ModuleNotification)
	ModuleMessage(*Conn, uint32, *v1.ModuleMessageRequest)
	SelectGameAccount_DEPRECATED(*Conn, uint32, *protocol.EntityId)
	GenerateSSOToken(*Conn, uint32, *v1.GenerateSSOTokenRequest)
	SelectGameAccount(*Conn, uint32, *v1.SelectGameAccountRequest)
	VerifyWebCredentials(*Conn, uint32, *v1.VerifyWebCredentialsRequest)
	GenerateWebCredentials(*Conn, uint32, *v1.GenerateWebCredentialsRequest)
}

func DispatchAuthenticationService(conn *Conn, svc AuthenticationService, token uint32, method uint32, data []byte) error {
	switch method {
	case 1:
		var args v1.LogonRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.Logon(conn, token, &args)
	case 2:
		var args v1.ModuleNotification
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.ModuleNotify(conn, token, &args)
	case 3:
		var args v1.ModuleMessageRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.ModuleMessage(conn, token, &args)
	case 4:
		var args protocol.EntityId
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.SelectGameAccount_DEPRECATED(conn, token, &args)
	case 5:
		var args v1.GenerateSSOTokenRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.GenerateSSOToken(conn, token, &args)
	case 6:
		var args v1.SelectGameAccountRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.SelectGameAccount(conn, token, &args)
	case 7:
		var args v1.VerifyWebCredentialsRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.VerifyWebCredentials(conn, token, &args)
	case 8:
		var args v1.GenerateWebCredentialsRequest
		err := proto.Unmarshal(data, &args)
		if err != nil {
			return err
		}
		svc.GenerateWebCredentials(conn, token, &args)
	}
	return nil
}

type EmptyAuthenticationService struct{}

func (e EmptyAuthenticationService) Logon(conn *Conn, token uint32, args *v1.LogonRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) ModuleNotify(conn *Conn, token uint32, args *v1.ModuleNotification) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) ModuleMessage(conn *Conn, token uint32, args *v1.ModuleMessageRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) SelectGameAccount_DEPRECATED(conn *Conn, token uint32, args *protocol.EntityId) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) GenerateSSOToken(conn *Conn, token uint32, args *v1.GenerateSSOTokenRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) SelectGameAccount(conn *Conn, token uint32, args *v1.SelectGameAccountRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) VerifyWebCredentials(conn *Conn, token uint32, args *v1.VerifyWebCredentialsRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}
func (e EmptyAuthenticationService) GenerateWebCredentials(conn *Conn, token uint32, args *v1.GenerateWebCredentialsRequest) {
	conn.SendResponseCode(token, ERROR_RPC_NOT_IMPLEMENTED)
}

func (c *Conn) AuthenticationService_Request_Logon(args *v1.LogonRequest) error {
	header, _, err := c.Request(AuthenticationServiceHash, 1, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_ModuleNotify(args *v1.ModuleNotification) error {
	header, _, err := c.Request(AuthenticationServiceHash, 2, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_ModuleMessage(args *v1.ModuleMessageRequest) error {
	header, _, err := c.Request(AuthenticationServiceHash, 3, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_SelectGameAccount_DEPRECATED(args *protocol.EntityId) error {
	header, _, err := c.Request(AuthenticationServiceHash, 4, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_GenerateSSOToken(args *v1.GenerateSSOTokenRequest) (*v1.GenerateSSOTokenResponse, error) {
	header, bytes, err := c.Request(AuthenticationServiceHash, 5, args)
	if err != nil {
		return nil, err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return nil, fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	var out v1.GenerateSSOTokenResponse
	err = proto.Unmarshal(bytes, &out)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *Conn) AuthenticationService_Request_SelectGameAccount(args *v1.SelectGameAccountRequest) error {
	header, _, err := c.Request(AuthenticationServiceHash, 6, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_VerifyWebCredentials(args *v1.VerifyWebCredentialsRequest) error {
	header, _, err := c.Request(AuthenticationServiceHash, 7, args)
	if err != nil {
		return err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	return nil
}

func (c *Conn) AuthenticationService_Request_GenerateWebCredentials(args *v1.GenerateWebCredentialsRequest) (*v1.GenerateWebCredentialsResponse, error) {
	header, bytes, err := c.Request(AuthenticationServiceHash, 8, args)
	if err != nil {
		return nil, err
	}
	if Status(header.GetStatus()) != ERROR_OK {
		return nil, fmt.Errorf("bnet: non-ok status 0x%08X", header.GetStatus())
	}
	var out v1.GenerateWebCredentialsResponse
	err = proto.Unmarshal(bytes, &out)
	if err != nil {
		return nil, err
	}
	return &out, nil
}
